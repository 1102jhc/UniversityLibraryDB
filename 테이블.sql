--------------------------------------------------------
--  파일이 생성됨 - 월요일-11월-30-2020   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table AUDIOBOOK
--------------------------------------------------------

  CREATE TABLE "SCOTT"."AUDIOBOOK" 
   (	"REGISTRATIONNUMBER" VARCHAR2(10 BYTE), 
	"VOICE_ACTOR" VARCHAR2(100 BYTE), 
	"DIRECTOR" VARCHAR2(100 BYTE), 
	"SCRIPT" VARCHAR2(10 BYTE), 
	"PLAYTIME" VARCHAR2(8 BYTE), 
	"FILECAPACITY" VARCHAR2(10 BYTE), 
	"CONTENTSSUMMARY" VARCHAR2(200 BYTE), 
	"DOWNLOAD_URL" VARCHAR2(200 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table AUDIOVISUAL_DATA
--------------------------------------------------------

  CREATE TABLE "SCOTT"."AUDIOVISUAL_DATA" 
   (	"REGISTRATIONNUMBER" VARCHAR2(10 BYTE), 
	"USELANGUAGE" VARCHAR2(20 BYTE), 
	"USECANDIDATE" VARCHAR2(20 BYTE), 
	"BROADCASTDAY" TIMESTAMP (6), 
	"CAST" VARCHAR2(100 BYTE), 
	"ORIGINAL_BOOKNAME" VARCHAR2(50 BYTE), 
	"CONTENTSSUMMARY" VARCHAR2(2000 BYTE), 
	"DEMANDSPECIFICATIONS" VARCHAR2(2000 BYTE), 
	"ORIGINAL_BOOK_AUTHOR" VARCHAR2(2000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table BOOK
--------------------------------------------------------

  CREATE TABLE "SCOTT"."BOOK" 
   (	"REGISTRATIONNUMBER" VARCHAR2(10 BYTE), 
	"ISBN" NUMBER(13,0), 
	"REAL_LOCATION" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table BUSINESSADMINISTRATION
--------------------------------------------------------

  CREATE TABLE "SCOTT"."BUSINESSADMINISTRATION" 
   (	"BUSINESS_CODE" VARCHAR2(10 BYTE), 
	"BUSINESSNAME" VARCHAR2(20 BYTE), 
	"BUSINESS_MANAGER" VARCHAR2(20 BYTE), 
	"REPRESENTATIONTEL" VARCHAR2(20 BYTE), 
	"REGISTNUMBER" NUMBER(10,0), 
	"BUSINESS_ADDRESS" VARCHAR2(50 BYTE), 
	"BUSINESS_EMAIL" VARCHAR2(30 BYTE), 
	"BUSINESS_FAX" VARCHAR2(20 BYTE), 
	"NOTE" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DATA
--------------------------------------------------------

  CREATE TABLE "SCOTT"."DATA" 
   (	"REGISTRATIONNUMBER" VARCHAR2(10 BYTE), 
	"GET_DIVISION_CODE" VARCHAR2(11 BYTE), 
	"CALLSIGN" VARCHAR2(20 BYTE), 
	"DATA_NAME" VARCHAR2(200 BYTE), 
	"AUTHOR" VARCHAR2(50 BYTE), 
	"PUBLISHER" VARCHAR2(50 BYTE), 
	"VOLUME" VARCHAR2(5 BYTE), 
	"COPY_WHETHER" VARCHAR2(5 BYTE), 
	"GETPRICE" NUMBER(6,0), 
	"RENTSTATE" VARCHAR2(20 BYTE), 
	"PUBLICATIONYEAR" TIMESTAMP (6), 
	"STATE" VARCHAR2(10 BYTE), 
	"ORIGINAL_PRICE" NUMBER(6,0), 
	"DATA_TYPE" VARCHAR2(10 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table E_BOOK
--------------------------------------------------------

  CREATE TABLE "SCOTT"."E_BOOK" 
   (	"REGISTRATIONNUMBER" VARCHAR2(10 BYTE), 
	"CONTENTSSUMMARY" VARCHAR2(2000 BYTE), 
	"RENT_URL" VARCHAR2(200 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table ENTER_RECORD
--------------------------------------------------------

  CREATE TABLE "SCOTT"."ENTER_RECORD" 
   (	"ENTER_RECORD_CODE" VARCHAR2(14 BYTE), 
	"MEMBERNUMBER" VARCHAR2(12 BYTE), 
	"ENTER_DAY" TIMESTAMP (6), 
	"NOTE" VARCHAR2(30 BYTE), 
	"OUTSIDERPERSON_CODE" VARCHAR2(12 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table ENTERSTATISTICS
--------------------------------------------------------

  CREATE TABLE "SCOTT"."ENTERSTATISTICS" 
   (	"STATISTICSNAME" VARCHAR2(40 BYTE), 
	"MEMBERCATEGORY" VARCHAR2(20 BYTE), 
	"MEMBERMAINCATEGORY" VARCHAR2(20 BYTE), 
	"MEMBERMIDDLECATEGORY" VARCHAR2(20 BYTE), 
	"YEAR" NUMBER, 
	"MONTH" NUMBER, 
	"ENTERVALUE" NUMBER, 
	"MEMBERSUBCATEGORY" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table FACILITY
--------------------------------------------------------

  CREATE TABLE "SCOTT"."FACILITY" 
   (	"FACILITYNUMBER" VARCHAR2(20 BYTE), 
	"FACILITYMAINCATEGORY" VARCHAR2(20 BYTE), 
	"FACILITYNAME" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table FACILITYUSEBOOKING
--------------------------------------------------------

  CREATE TABLE "SCOTT"."FACILITYUSEBOOKING" 
   (	"BOOKINGNUMBER" NUMBER, 
	"MEMBERNUMBER" VARCHAR2(12 BYTE), 
	"FACILITYNUMBER" VARCHAR2(20 BYTE), 
	"BOOKINGAPPLYDAY" TIMESTAMP (6), 
	"BOOKINGPERSON_NAME" VARCHAR2(20 BYTE), 
	"PHONENUMBER" VARCHAR2(13 BYTE), 
	"EMAIL" VARCHAR2(50 BYTE), 
	"USEOBJECT" VARCHAR2(13 BYTE), 
	"USEPEOPLE" VARCHAR2(100 BYTE), 
	"BOOKINGAPPROVALWHETHER" VARCHAR2(2 BYTE), 
	"USEDATE" TIMESTAMP (6), 
	"USETIME" NUMBER, 
	"USEWHETHER" VARCHAR2(2 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table FACILITYUSESTATISTICS
--------------------------------------------------------

  CREATE TABLE "SCOTT"."FACILITYUSESTATISTICS" 
   (	"STATISTICSNAME" VARCHAR2(40 BYTE), 
	"MEMBERMAINCATEGORY" VARCHAR2(20 BYTE), 
	"MEMBERMIDDLECATEGORY" VARCHAR2(20 BYTE), 
	"MEMBERSUBCATEGORY" VARCHAR2(20 BYTE), 
	"YEAR" NUMBER, 
	"MONTH" NUMBER, 
	"BOOKINGTIME" NUMBER, 
	"BOOKINGCOUNT" NUMBER, 
	"FACILITYNUMBER" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table GET
--------------------------------------------------------

  CREATE TABLE "SCOTT"."GET" 
   (	"GET_DIVISION_CODE" VARCHAR2(11 BYTE), 
	"BUSINESS_CODE" VARCHAR2(10 BYTE), 
	"GET_BREAKDOWN" VARCHAR2(200 BYTE), 
	"GET_NUMBER" NUMBER(*,0), 
	"GET_PRICE" NUMBER(*,0), 
	"GET_DAY" TIMESTAMP (6), 
	"MANAGER" VARCHAR2(20 BYTE), 
	"NOTE" VARCHAR2(50 BYTE), 
	"GET_TYPE" VARCHAR2(10 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table LOSS
--------------------------------------------------------

  CREATE TABLE "SCOTT"."LOSS" 
   (	"RENTNUMBER" VARCHAR2(14 BYTE), 
	"LOSSDATE" TIMESTAMP (6), 
	"LOSSPLACE" VARCHAR2(60 BYTE), 
	"FEEPAYWHETHER" NUMBER(*,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table LOSSSTATISTICS
--------------------------------------------------------

  CREATE TABLE "SCOTT"."LOSSSTATISTICS" 
   (	"STATISTICSNAME" VARCHAR2(40 BYTE), 
	"MEMBERMAINCATEGORY" VARCHAR2(20 BYTE), 
	"MEMBERMIDDLECATEGORY" VARCHAR2(20 BYTE), 
	"MEMBERSUBCATEGORY" VARCHAR2(20 BYTE), 
	"YEAR" NUMBER, 
	"MONTH" NUMBER, 
	"LOSSNUMBER" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table MAJOR_DEPARTMENT
--------------------------------------------------------

  CREATE TABLE "SCOTT"."MAJOR_DEPARTMENT" 
   (	"MAJOR_DEPARTMENT_CODE" NUMBER(3,0), 
	"NAME" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table MEMBERINFORMATION
--------------------------------------------------------

  CREATE TABLE "SCOTT"."MEMBERINFORMATION" 
   (	"MEMBERNUMBER" VARCHAR2(12 BYTE), 
	"APPLYDAY" TIMESTAMP (6), 
	"APPROVALDAY" TIMESTAMP (6), 
	"AFFECTDAY" TIMESTAMP (6), 
	"RENTABLEWHETHER" VARCHAR2(20 BYTE), 
	"NAME" VARCHAR2(10 BYTE), 
	"BIRTHDAY" TIMESTAMP (6), 
	"PHONENUMBER" VARCHAR2(13 BYTE), 
	"TELNUMBER" VARCHAR2(13 BYTE), 
	"EMAIL" VARCHAR2(50 BYTE), 
	"MAILNUMBER" NUMBER, 
	"ADDRESS" VARCHAR2(100 BYTE), 
	"IDENTITY" VARCHAR2(12 BYTE), 
	"GRADE" NUMBER, 
	"AFFILIATION" VARCHAR2(16 BYTE), 
	"MAJOR_DEPARTMENT_CODE" NUMBER(3,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table OUTSIDERPERSON
--------------------------------------------------------

  CREATE TABLE "SCOTT"."OUTSIDERPERSON" 
   (	"OUTSIDERPERSON_CODE" VARCHAR2(12 BYTE), 
	"NAME" VARCHAR2(10 BYTE), 
	"AFFECTTERM" TIMESTAMP (6), 
	"ISSUEDAY" TIMESTAMP (6), 
	"RESIDENTNUMBER" VARCHAR2(14 BYTE), 
	"PHONENUMBER" VARCHAR2(13 BYTE), 
	"NOTE" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table OVERDUESTATISTICS
--------------------------------------------------------

  CREATE TABLE "SCOTT"."OVERDUESTATISTICS" 
   (	"STATISTICSNAME" VARCHAR2(40 BYTE), 
	"MEMBERMAINCATEGORY" VARCHAR2(20 BYTE), 
	"MEMBERMIDDLECATEGORY" VARCHAR2(20 BYTE), 
	"MEMBERSUBCATEGORY" VARCHAR2(20 BYTE), 
	"YEAR" NUMBER, 
	"MONTH" NUMBER, 
	"OVERDUENUMBER" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PC_USEBREAKDOWN
--------------------------------------------------------

  CREATE TABLE "SCOTT"."PC_USEBREAKDOWN" 
   (	"USEBREAKDOWNNUMBER" VARCHAR2(20 BYTE), 
	"MEMBERNUMBER" VARCHAR2(12 BYTE), 
	"USE_DATE" TIMESTAMP (6), 
	"PC_NUMBER" NUMBER, 
	"USE_TIME" NUMBER, 
	"USE_PEOPLE" NUMBER
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PENALTY_CLASS
--------------------------------------------------------

  CREATE TABLE "SCOTT"."PENALTY_CLASS" 
   (	"CLASS_CODE" CHAR(2 BYTE), 
	"PENALTYLIST" VARCHAR2(50 BYTE), 
	"VIOLATIONLIST" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PENALTYADMINISTRATION
--------------------------------------------------------

  CREATE TABLE "SCOTT"."PENALTYADMINISTRATION" 
   (	"PNUMBER" NUMBER, 
	"MEMBERNUMBER" VARCHAR2(12 BYTE), 
	"CLASS_CODE" CHAR(2 BYTE), 
	"REGISTRATIONDAY" TIMESTAMP (6), 
	"AFFECTDAY" TIMESTAMP (6), 
	"EXTINCTIONDAY" TIMESTAMP (6), 
	"NOTE" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PUBLICATION
--------------------------------------------------------

  CREATE TABLE "SCOTT"."PUBLICATION" 
   (	"ISSN" NUMBER(8,0), 
	"PUBLICATIONFREQUENCY" VARCHAR2(10 BYTE), 
	"PUBLICATION_STATE" VARCHAR2(10 BYTE), 
	"SUBSCRIPTION_STATE" VARCHAR2(10 BYTE), 
	"COLLECTIONPLACE" VARCHAR2(10 BYTE), 
	"GET_STATUS" VARCHAR2(10 BYTE), 
	"NOTE" VARCHAR2(50 BYTE), 
	"DOMESTIC_FOREIGN" VARCHAR2(5 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PUBLICATION_INFORMATION
--------------------------------------------------------

  CREATE TABLE "SCOTT"."PUBLICATION_INFORMATION" 
   (	"REGISTRATIONNUMBER" VARCHAR2(10 BYTE), 
	"ISSN" NUMBER(8,0), 
	"PUBLICATIONDAY" TIMESTAMP (6), 
	"VOLUME" NUMBER(4,0), 
	"TOTAL_VOLUMES" NUMBER(4,0), 
	"NOTE" VARCHAR2(50 BYTE), 
	"FILE_URL" VARCHAR2(200 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table RENT
--------------------------------------------------------

  CREATE TABLE "SCOTT"."RENT" 
   (	"RENTNUMBER" VARCHAR2(14 BYTE), 
	"REGISTRATIONNUMBER" VARCHAR2(10 BYTE), 
	"MEMBERNUMBER" VARCHAR2(12 BYTE), 
	"RENTDAY" TIMESTAMP (6), 
	"RETURNSCHEDULEDAY" TIMESTAMP (6), 
	"RETURNDAY" TIMESTAMP (6), 
	"RENTTYPE" VARCHAR2(6 BYTE), 
	"EXTENSIONWHETHER" VARCHAR2(10 BYTE), 
	"RENEWALDAY" TIMESTAMP (6), 
	"RENTPLACE_IP" VARCHAR2(20 BYTE), 
	"RETROCATIVERETURN" VARCHAR2(10 BYTE), 
	"RENTMANAGER" VARCHAR2(10 BYTE), 
	"RETURNMANAGER" VARCHAR2(10 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table RENTBOOKING
--------------------------------------------------------

  CREATE TABLE "SCOTT"."RENTBOOKING" 
   (	"RENTBOOKINGNUMBER" VARCHAR2(14 BYTE), 
	"REGISTRATIONNUMBER" VARCHAR2(10 BYTE), 
	"MEMBERNUMBER" VARCHAR2(12 BYTE), 
	"RENTBOOKINGDAY" TIMESTAMP (6)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table RENTSTATISTICS
--------------------------------------------------------

  CREATE TABLE "SCOTT"."RENTSTATISTICS" 
   (	"STATISTICSNAME" VARCHAR2(40 BYTE), 
	"MEMBERMAINCATEGORY" VARCHAR2(20 BYTE), 
	"MEMBERMIDDLECATEGORY" VARCHAR2(20 BYTE), 
	"MEMBERSUBCATEGORY" VARCHAR2(20 BYTE), 
	"YEAR" NUMBER, 
	"MONTH" NUMBER, 
	"RENTNUMBER" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table WISH_BOOK
--------------------------------------------------------

  CREATE TABLE "SCOTT"."WISH_BOOK" 
   (	"WISH_BOOK_CODE" CHAR(18 BYTE), 
	"MEMBERNUMBER" VARCHAR2(12 BYTE), 
	"BOOKNAME" CHAR(18 BYTE), 
	"PUBLICATIONYEAR" CHAR(18 BYTE), 
	"AUTHORNAME" CHAR(18 BYTE), 
	"PUBLISHER" CHAR(18 BYTE), 
	"ISBN" CHAR(18 BYTE), 
	"VOLUMENUMBER" CHAR(18 BYTE), 
	"PRICE" CHAR(18 BYTE), 
	"PROGRESS_STATE" CHAR(18 BYTE), 
	"PURCHASE_IMPOSSIBLE_REASON" CHAR(18 BYTE), 
	"NOTE" CHAR(18 BYTE), 
	"APPLYDAY" CHAR(18 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table WISH_PUBLICATION_APPLY
--------------------------------------------------------

  CREATE TABLE "SCOTT"."WISH_PUBLICATION_APPLY" 
   (	"WISH_PUBLICATION_CODE" VARCHAR2(11 BYTE), 
	"PUBLICATIONNAME" VARCHAR2(50 BYTE), 
	"SUPPLYPLACENAME" VARCHAR2(20 BYTE), 
	"ISSN" NUMBER(8,0), 
	"APPLYREASON" VARCHAR2(100 BYTE), 
	"SUBSCRIPTIONDIVISION" VARCHAR2(5 BYTE), 
	"NOTE" VARCHAR2(50 BYTE), 
	"APPLYDATE" TIMESTAMP (6), 
	"MAJOR_DEPARTMENT_CODE" NUMBER(3,0)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
REM INSERTING into SCOTT.AUDIOBOOK
SET DEFINE OFF;
Insert into SCOTT.AUDIOBOOK (REGISTRATIONNUMBER,VOICE_ACTOR,DIRECTOR,SCRIPT,PLAYTIME,FILECAPACITY,CONTENTSSUMMARY,DOWNLOAD_URL) values ('A000152','이문희','강은선','정신선','1:40:44','138M','“무한 긍정만을 강요하던 기존의 자기계발서는 잊어라!” 인생의 터닝포인트를 위해 가장 중요한 것만 남기고 모두 지워버리는 법','http://www.audien.com/wpoc/content/book/detail.htm?prodId=1008271&src=SEARCH&srcId=101690241');
Insert into SCOTT.AUDIOBOOK (REGISTRATIONNUMBER,VOICE_ACTOR,DIRECTOR,SCRIPT,PLAYTIME,FILECAPACITY,CONTENTSSUMMARY,DOWNLOAD_URL) values ('A000645','장병관','김현','박찬송','1:45:34','144M','“얘네 무슨 생각을 하는 걸까?” 공무원을 갈망하고, 호구가 되기를 거부하는 낯선 존재들의 세계에서 함께 사는 법','http://www.audien.com/wpoc/content/book/detail.htm?prodId=1010978&src=SEARCH&srcId=101690242');
Insert into SCOTT.AUDIOBOOK (REGISTRATIONNUMBER,VOICE_ACTOR,DIRECTOR,SCRIPT,PLAYTIME,FILECAPACITY,CONTENTSSUMMARY,DOWNLOAD_URL) values ('A000131','홍석린','강은선','신병진','1:52:20','154M','노력이 배신하고, 인생에 사사건건 고나리질하는 현실','http://www.audien.com/wpoc/content/book/detail.htm?prodId=1010000&src=SEARCH&srcId=101690243');
Insert into SCOTT.AUDIOBOOK (REGISTRATIONNUMBER,VOICE_ACTOR,DIRECTOR,SCRIPT,PLAYTIME,FILECAPACITY,CONTENTSSUMMARY,DOWNLOAD_URL) values ('A000358','김경일','오디언','박찬송','1:47:59','148M','열심히 ‘내’ 인생을 살기 위해 더 이상 열심히 살지 않기로 결심했다! 한 남자의 인생을 건 본격 야매 득도 에세이','http://www.audien.com/wpoc/content/book/detail.htm?prodId=1011627&src=SEARCH&srcId=101690248');
REM INSERTING into SCOTT.AUDIOVISUAL_DATA
SET DEFINE OFF;
Insert into SCOTT.AUDIOVISUAL_DATA (REGISTRATIONNUMBER,USELANGUAGE,USECANDIDATE,BROADCASTDAY,CAST,ORIGINAL_BOOKNAME,CONTENTSSUMMARY,DEMANDSPECIFICATIONS,ORIGINAL_BOOK_AUTHOR) values ('D004431','영어, 한국어','전체관람가',to_timestamp('18/11/07 15:09','RR/MM/DD HH24:MI'),'빌 스카스가드, 알리시아 비칸데르, 스텔란 스카스가드','Jakub Wronski, Muumien joulu','Ira Carpelan','따스한 여름이 지나고 겨울이 찾아온 무민 골짜기. 밤나무와 열매 그리고 나뭇잎 향기까지, 무민이 좋아했던 모든 것을 꽁꽁 얼려버린 겨울은 무민이 가장 소중하게 생각했던 해님까지 몰래 숨겨버린다. 해님을 기다리던 무민은 오랜 고민 끝에 직접 해님을 찾기로 하고, 친구 투티키와 특별한 도전에 나서는데... ','DVD ; 오디오, Dolby Digital Stereo 2.0 ; 화면, 1.85:1 Anamorphic Widescreen');
Insert into SCOTT.AUDIOVISUAL_DATA (REGISTRATIONNUMBER,USELANGUAGE,USECANDIDATE,BROADCASTDAY,CAST,ORIGINAL_BOOKNAME,CONTENTSSUMMARY,DEMANDSPECIFICATIONS,ORIGINAL_BOOK_AUTHOR) values ('C000049',null,null,to_timestamp('95/11/09 15:09','RR/MM/DD HH24:MI'),null,null,null,null,'"시스템조건(기본사양) : CPU 486SX ; 메인 메모리 4메가 ; 디스플레이 256칼라 이상 ; 여유 하드 디스크 10메가 바이트 이상');
Insert into SCOTT.AUDIOVISUAL_DATA (REGISTRATIONNUMBER,USELANGUAGE,USECANDIDATE,BROADCASTDAY,CAST,ORIGINAL_BOOKNAME,CONTENTSSUMMARY,DEMANDSPECIFICATIONS,ORIGINAL_BOOK_AUTHOR) values ('C000113',null,null,to_timestamp('00/11/16 15:09','RR/MM/DD HH24:MI'),null,null,null,null,'시스템조건(권장사양) : 486DX 이상 ; 미엔 메모리 8메가 바이트 이상 ; 슈퍼 VGA 32000칼라 이상"');
Insert into SCOTT.AUDIOVISUAL_DATA (REGISTRATIONNUMBER,USELANGUAGE,USECANDIDATE,BROADCASTDAY,CAST,ORIGINAL_BOOKNAME,CONTENTSSUMMARY,DEMANDSPECIFICATIONS,ORIGINAL_BOOK_AUTHOR) values ('V000415','한국어',null,to_timestamp('91/11/07 15:10','RR/MM/DD HH24:MI'),null,null,null,null,'윈도우 95/98 ;펜티엄 또는 Intel 프로세서 호환 II 233MHz 이상 : 램 32MB 이상 ;하드 디스크 드라이브 550 MB이상 ;CD-ROM 드라이브 8배속 이상 ;800 X 600 해상도 ;16bit컬러 비디오 디스플레이 이상 ;음향장치 윈도우 95/98호환용');
REM INSERTING into SCOTT.BOOK
SET DEFINE OFF;
Insert into SCOTT.BOOK (REGISTRATIONNUMBER,ISBN,REAL_LOCATION) values ('E063399',8988246276,'보존서고06');
Insert into SCOTT.BOOK (REGISTRATIONNUMBER,ISBN,REAL_LOCATION) values ('E095717',8934919876,'보존서고06');
Insert into SCOTT.BOOK (REGISTRATIONNUMBER,ISBN,REAL_LOCATION) values ('E152040',9788991529168,'5층 자료열람실');
Insert into SCOTT.BOOK (REGISTRATIONNUMBER,ISBN,REAL_LOCATION) values ('E055305',8976275861,'보존서고03');
REM INSERTING into SCOTT.BUSINESSADMINISTRATION
SET DEFINE OFF;
Insert into SCOTT.BUSINESSADMINISTRATION (BUSINESS_CODE,BUSINESSNAME,BUSINESS_MANAGER,REPRESENTATIONTEL,REGISTNUMBER,BUSINESS_ADDRESS,BUSINESS_EMAIL,BUSINESS_FAX,NOTE) values ('C19042101','알라딘','최우경','1544-2514',2018123094,'서울시 중구 서소문로 26 ','privacy@aladin.co.kr','02-6913-2500',null);
Insert into SCOTT.BUSINESSADMINISTRATION (BUSINESS_CODE,BUSINESSNAME,BUSINESS_MANAGER,REPRESENTATIONTEL,REGISTNUMBER,BUSINESS_ADDRESS,BUSINESS_EMAIL,BUSINESS_FAX,NOTE) values ('C19052101','YES24','김석환','1544-3800',2298137000,'서울시 영등포구 은행로 11','yes24help@yes24.com','02-784-5268',null);
Insert into SCOTT.BUSINESSADMINISTRATION (BUSINESS_CODE,BUSINESSNAME,BUSINESS_MANAGER,REPRESENTATIONTEL,REGISTNUMBER,BUSINESS_ADDRESS,BUSINESS_EMAIL,BUSINESS_FAX,NOTE) values ('C20012101','교보문고','박영규','1544-1900',1028111670,'서울시 종로구 종로 1','gone72@kyobobook.co.kr','0502-987-5711',null);
Insert into SCOTT.BUSINESSADMINISTRATION (BUSINESS_CODE,BUSINESSNAME,BUSINESS_MANAGER,REPRESENTATIONTEL,REGISTNUMBER,BUSINESS_ADDRESS,BUSINESS_EMAIL,BUSINESS_FAX,NOTE) values ('C20052201','영풍문고','최영일','02-519-2860',7738601800,'서울시 강남구 강남대로 542','webmaster@ypbooks.co.kr',null,null);
REM INSERTING into SCOTT.DATA
SET DEFINE OFF;
Insert into SCOTT.DATA (REGISTRATIONNUMBER,GET_DIVISION_CODE,CALLSIGN,DATA_NAME,AUTHOR,PUBLISHER,VOLUME,COPY_WHETHER,GETPRICE,RENTSTATE,PUBLICATIONYEAR,STATE,ORIGINAL_PRICE,DATA_TYPE) values ('E063399',null,'814.6 킴829ㅁ','(가시소년)만화 보다가 하버드 갔습니다','켄트 킴','징검다리',null,'c.2',6120,'대출가능/예약불가',null,'열람가능',6800,'단행본');
Insert into SCOTT.DATA (REGISTRATIONNUMBER,GET_DIVISION_CODE,CALLSIGN,DATA_NAME,AUTHOR,PUBLISHER,VOLUME,COPY_WHETHER,GETPRICE,RENTSTATE,PUBLICATIONYEAR,STATE,ORIGINAL_PRICE,DATA_TYPE) values ('E095717',null,'802 탁53ㄱ','(탁석산의)글짓는 도서관','탁석산','김영사','v.3','c.2',7110,'대출가능/예약불가',null,'열람가능',7900,'단행본');
Insert into SCOTT.DATA (REGISTRATIONNUMBER,GET_DIVISION_CODE,CALLSIGN,DATA_NAME,AUTHOR,PUBLISHER,VOLUME,COPY_WHETHER,GETPRICE,RENTSTATE,PUBLICATIONYEAR,STATE,ORIGINAL_PRICE,DATA_TYPE) values ('E152040',null,'596.81 송53ㅎ ','(새로운)호텔경영학','송성인 ','새로미',null,null,19800,'대출가능/예약불가',null,'열람가능',22000,'단행본');
Insert into SCOTT.DATA (REGISTRATIONNUMBER,GET_DIVISION_CODE,CALLSIGN,DATA_NAME,AUTHOR,PUBLISHER,VOLUME,COPY_WHETHER,GETPRICE,RENTSTATE,PUBLICATIONYEAR,STATE,ORIGINAL_PRICE,DATA_TYPE) values ('E055305',null,'566.575 최39ㅁ ','(안녕하세요)멀티미디어 홈페이지 만들기','최민석','정보문화사',null,null,14400,'대출가능/예약불가',null,'열람가능',16000,'단행본');
Insert into SCOTT.DATA (REGISTRATIONNUMBER,GET_DIVISION_CODE,CALLSIGN,DATA_NAME,AUTHOR,PUBLISHER,VOLUME,COPY_WHETHER,GETPRICE,RENTSTATE,PUBLICATIONYEAR,STATE,ORIGINAL_PRICE,DATA_TYPE) values ('Z001661',null,null,'(가로세로) 한국사퍼즐','전지성','미네르바',null,null,13500,'대출가능/예약불가',null,'열람가능',15000,'E-Book');
Insert into SCOTT.DATA (REGISTRATIONNUMBER,GET_DIVISION_CODE,CALLSIGN,DATA_NAME,AUTHOR,PUBLISHER,VOLUME,COPY_WHETHER,GETPRICE,RENTSTATE,PUBLICATIONYEAR,STATE,ORIGINAL_PRICE,DATA_TYPE) values ('Z007181',null,null,'유시민의 글쓰기 특강','유시민','생각의 길 : 아름다운 사람들',null,null,10800,'대출가능/예약불가',null,'열람가능',12000,'E-Book');
Insert into SCOTT.DATA (REGISTRATIONNUMBER,GET_DIVISION_CODE,CALLSIGN,DATA_NAME,AUTHOR,PUBLISHER,VOLUME,COPY_WHETHER,GETPRICE,RENTSTATE,PUBLICATIONYEAR,STATE,ORIGINAL_PRICE,DATA_TYPE) values ('Z012662',null,null,'결국 성공하는 힘 :성공한 사람들의 7가지 공통점','가게야마 요시키','다른상상',null,null,8694,'대출가능/예약불가',null,'열람가능',9660,'E-Book');
Insert into SCOTT.DATA (REGISTRATIONNUMBER,GET_DIVISION_CODE,CALLSIGN,DATA_NAME,AUTHOR,PUBLISHER,VOLUME,COPY_WHETHER,GETPRICE,RENTSTATE,PUBLICATIONYEAR,STATE,ORIGINAL_PRICE,DATA_TYPE) values ('Z010635',null,null,'북유럽 신화','닐 게이먼','나무의철학',null,null,10584,'대출가능/예약불가',null,'열람가능',11760,'E-Book');
Insert into SCOTT.DATA (REGISTRATIONNUMBER,GET_DIVISION_CODE,CALLSIGN,DATA_NAME,AUTHOR,PUBLISHER,VOLUME,COPY_WHETHER,GETPRICE,RENTSTATE,PUBLICATIONYEAR,STATE,ORIGINAL_PRICE,DATA_TYPE) values ('D004431',null,'688.6 카238ㅁ ','(겨울왕국의)무민','이라 카르페란','미디어포유',null,null,24750,'대출불가/예약불가',null,'열람문의',27500,'DVD');
Insert into SCOTT.DATA (REGISTRATIONNUMBER,GET_DIVISION_CODE,CALLSIGN,DATA_NAME,AUTHOR,PUBLISHER,VOLUME,COPY_WHETHER,GETPRICE,RENTSTATE,PUBLICATIONYEAR,STATE,ORIGINAL_PRICE,DATA_TYPE) values ('C000049',null,'909 다55c ','CD로 보는 세계사','다솜 ITS','다솜 ITS',null,null,16200,'대출불가/예약불가',null,'열람문의',18000,'CD');
Insert into SCOTT.DATA (REGISTRATIONNUMBER,GET_DIVISION_CODE,CALLSIGN,DATA_NAME,AUTHOR,PUBLISHER,VOLUME,COPY_WHETHER,GETPRICE,RENTSTATE,PUBLICATIONYEAR,STATE,ORIGINAL_PRICE,DATA_TYPE) values ('C000113',null,'031 한17ㅂ ','(지식의 세계 표준) 브리태니커 CD 2000','한국브리태니커','한국브리태니커',null,null,18000,'대출불가/예약불가',null,'열람문의',20000,'CD');
Insert into SCOTT.DATA (REGISTRATIONNUMBER,GET_DIVISION_CODE,CALLSIGN,DATA_NAME,AUTHOR,PUBLISHER,VOLUME,COPY_WHETHER,GETPRICE,RENTSTATE,PUBLICATIONYEAR,STATE,ORIGINAL_PRICE,DATA_TYPE) values ('V000415',null,'980.24 벧63a ','Around World Video Visits','벧엘프로그램','벧엘프로그램',null,null,16650,'대출불가/예약불가',null,'열람문의',18500,'VIDEO');
Insert into SCOTT.DATA (REGISTRATIONNUMBER,GET_DIVISION_CODE,CALLSIGN,DATA_NAME,AUTHOR,PUBLISHER,VOLUME,COPY_WHETHER,GETPRICE,RENTSTATE,PUBLICATIONYEAR,STATE,ORIGINAL_PRICE,DATA_TYPE) values ('F000878',null,'581.305 한17ㄱ ','금형저널','한국금형정보센터','한국금형정보센터',null,null,14400,'대출불가/예약불가',null,'열람문의',16000,'간행물');
Insert into SCOTT.DATA (REGISTRATIONNUMBER,GET_DIVISION_CODE,CALLSIGN,DATA_NAME,AUTHOR,PUBLISHER,VOLUME,COPY_WHETHER,GETPRICE,RENTSTATE,PUBLICATIONYEAR,STATE,ORIGINAL_PRICE,DATA_TYPE) values ('F000899',null,'338.05 한17ㅎ ','(계간)한국사회복지학','한국사회복지학회 편집위원회 편','청목',null,null,16200,'대출불가/예약불가',null,'열람문의',18000,'간행물');
Insert into SCOTT.DATA (REGISTRATIONNUMBER,GET_DIVISION_CODE,CALLSIGN,DATA_NAME,AUTHOR,PUBLISHER,VOLUME,COPY_WHETHER,GETPRICE,RENTSTATE,PUBLICATIONYEAR,STATE,ORIGINAL_PRICE,DATA_TYPE) values ('F000031',null,'596.8105 내69ㄷ ','대학내일','내일신문 대학팀','내일신문 대학팀',null,null,11700,'대출불가/예약불가',null,'열람문의',13000,'간행물');
Insert into SCOTT.DATA (REGISTRATIONNUMBER,GET_DIVISION_CODE,CALLSIGN,DATA_NAME,AUTHOR,PUBLISHER,VOLUME,COPY_WHETHER,GETPRICE,RENTSTATE,PUBLICATIONYEAR,STATE,ORIGINAL_PRICE,DATA_TYPE) values ('A000152',null,null,'신경 끄기의 기술','마크 맨슨','갤리온',null,null,81000,'대출가능/예약불가',null,'열람가능',90000,'오디오북');
Insert into SCOTT.DATA (REGISTRATIONNUMBER,GET_DIVISION_CODE,CALLSIGN,DATA_NAME,AUTHOR,PUBLISHER,VOLUME,COPY_WHETHER,GETPRICE,RENTSTATE,PUBLICATIONYEAR,STATE,ORIGINAL_PRICE,DATA_TYPE) values ('A000645',null,null,'90년생이 온다','임홍택','웨일북',null,null,103500,'대출가능/예약불가',null,'열람가능',115000,'오디오북');
Insert into SCOTT.DATA (REGISTRATIONNUMBER,GET_DIVISION_CODE,CALLSIGN,DATA_NAME,AUTHOR,PUBLISHER,VOLUME,COPY_WHETHER,GETPRICE,RENTSTATE,PUBLICATIONYEAR,STATE,ORIGINAL_PRICE,DATA_TYPE) values ('A000131',null,null,'하마터먼 열심히 살 뻔했다','하완','웅진지식하우스',null,null,124200,'대출가능/예약불가',null,'열람가능',138000,'오디오북');
Insert into SCOTT.DATA (REGISTRATIONNUMBER,GET_DIVISION_CODE,CALLSIGN,DATA_NAME,AUTHOR,PUBLISHER,VOLUME,COPY_WHETHER,GETPRICE,RENTSTATE,PUBLICATIONYEAR,STATE,ORIGINAL_PRICE,DATA_TYPE) values ('A000358',null,null,'요즘 애들, 요즘 어른들','김용섭','21세기북스',null,null,144000,'대출가능/예약불가',null,'열람가능',160000,'오디오북');
REM INSERTING into SCOTT.E_BOOK
SET DEFINE OFF;
Insert into SCOTT.E_BOOK (REGISTRATIONNUMBER,CONTENTSSUMMARY,RENT_URL) values ('Z001661','언제 어디서나 재미있게 배우는 한국사 이야기 교양으로 읽고 재미로 푸는 한국사이야기 『가로세로 한국사 퍼즐』. 역사를 배우는 것은 단순히 과거 사람들의 삶의 흔적만을 배우는 것이 아니다. 과거의 역사를 통해 오늘날의 삶을 투영해 보고, 이런 과정을 통하여 과거가 알려주는 교훈을 오늘과 내일의 교훈으로 삼기 위해 역사를 배운다. 이 책은 가방에 가지고 다니며 언제 어디서나 가볍게 풀어 볼 수 있는 역사 퍼즐책이다. 시간과 공간의 제약을 받지 않으며 즐길 수 있는 한국사 퍼즐은 자신의 상식 수준도 체크할 수 있으며, 세계사 수준을 자연스럽게 높일 수 있도록 도왔다','svc=12&no=4808990299765');
Insert into SCOTT.E_BOOK (REGISTRATIONNUMBER,CONTENTSSUMMARY,RENT_URL) values ('Z007181','이 책은 저자의 글쓰기 강연을 바탕으로 만들어졌다. 저자는 이 책을 통해 30년 동안 쌓아온 작가 인생의 영업기밀을 가감 없이 풀어 놓았다. 이를 통해 글 쓰는 재주를 타고나지 않았더라도 누구든 노력하면 유시민처럼 쓸 수 있다는 단순한 진리를 독자들에게 전달해준다','http://ebook.yuhan.ac.kr/ebook/detail/?goods_id=17432239');
Insert into SCOTT.E_BOOK (REGISTRATIONNUMBER,CONTENTSSUMMARY,RENT_URL) values ('Z012662','어떻게 살아야 하는지 묻는 인생들에게 성공한 300명이 알려준 태도의 힘','http://ebook1.yuhan.ac.kr/Content_check.asp?barcode=4801196446902');
Insert into SCOTT.E_BOOK (REGISTRATIONNUMBER,CONTENTSSUMMARY,RENT_URL) values ('Z010635','신화, 라고 하면 "그리스 로마 신화"를 먼저 떠올리는 독자들에게 이 책은 오랫동안 묻혀 있던, 인류가 구축한 또 다른 세계를 발굴해 보여준다. 그 아름답고 우아한 세계에 존재했던 무한한 상상력을 선물한다. 수십만 독자와 언론, 평단으로부터 "현존하는 가장 재미있고 가장 매혹적인 북유럽 신화 판본"이라는 평가를 받은 이 책을 우리가 읽어야 할 이유는 하나다. 북유럽 신화는 인류 역사의 오래된, 그러나 전혀 새로운 입구이기 때문이다','http://ebook.yuhan.ac.kr/ebook/detail/?goods_id=44025357');
REM INSERTING into SCOTT.ENTER_RECORD
SET DEFINE OFF;
REM INSERTING into SCOTT.ENTERSTATISTICS
SET DEFINE OFF;
REM INSERTING into SCOTT.FACILITY
SET DEFINE OFF;
Insert into SCOTT.FACILITY (FACILITYNUMBER,FACILITYMAINCATEGORY,FACILITYNAME) values ('S010601','세미나실','세미나01실');
Insert into SCOTT.FACILITY (FACILITYNUMBER,FACILITYMAINCATEGORY,FACILITYNAME) values ('S010602','세미나실','세미나02실');
Insert into SCOTT.FACILITY (FACILITYNUMBER,FACILITYMAINCATEGORY,FACILITYNAME) values ('S010603','세미나실','세미나03실');
Insert into SCOTT.FACILITY (FACILITYNUMBER,FACILITYMAINCATEGORY,FACILITYNAME) values ('S010604','세미나실','세미나04실');
Insert into SCOTT.FACILITY (FACILITYNUMBER,FACILITYMAINCATEGORY,FACILITYNAME) values ('S010605','세미나실','세미나05실');
Insert into SCOTT.FACILITY (FACILITYNUMBER,FACILITYMAINCATEGORY,FACILITYNAME) values ('S010606','세미나실','세미나06실');
Insert into SCOTT.FACILITY (FACILITYNUMBER,FACILITYMAINCATEGORY,FACILITYNAME) values ('S010607','세미나실','세미나07실');
Insert into SCOTT.FACILITY (FACILITYNUMBER,FACILITYMAINCATEGORY,FACILITYNAME) values ('S010608','세미나실','세미나08실');
Insert into SCOTT.FACILITY (FACILITYNUMBER,FACILITYMAINCATEGORY,FACILITYNAME) values ('S010609','세미나실(대)','세미나09실');
Insert into SCOTT.FACILITY (FACILITYNUMBER,FACILITYMAINCATEGORY,FACILITYNAME) values ('T010401','THEATER','WILLOW THEATER');
REM INSERTING into SCOTT.FACILITYUSEBOOKING
SET DEFINE OFF;
Insert into SCOTT.FACILITYUSEBOOKING (BOOKINGNUMBER,MEMBERNUMBER,FACILITYNUMBER,BOOKINGAPPLYDAY,BOOKINGPERSON_NAME,PHONENUMBER,EMAIL,USEOBJECT,USEPEOPLE,BOOKINGAPPROVALWHETHER,USEDATE,USETIME,USEWHETHER) values (20201125001,'201607040','S010601',to_timestamp('20/11/25 10:40','RR/MM/DD HH24:MI'),'신희권','010-5684-1246','gmlrnjs131@naver.com','세미나실','3',null,to_timestamp('20/11/27 14:00','RR/MM/DD HH24:MI'),2,null);
Insert into SCOTT.FACILITYUSEBOOKING (BOOKINGNUMBER,MEMBERNUMBER,FACILITYNUMBER,BOOKINGAPPLYDAY,BOOKINGPERSON_NAME,PHONENUMBER,EMAIL,USEOBJECT,USEPEOPLE,BOOKINGAPPROVALWHETHER,USEDATE,USETIME,USEWHETHER) values (20201125002,'201407008','S010601',to_timestamp('20/11/25 00:40','RR/MM/DD HH24:MI'),'배민기','010-1257-8687','min@daum.net','세미나실','2',null,to_timestamp('20/11/27 14:00','RR/MM/DD HH24:MI'),2,null);
REM INSERTING into SCOTT.FACILITYUSESTATISTICS
SET DEFINE OFF;
Insert into SCOTT.FACILITYUSESTATISTICS (STATISTICSNAME,MEMBERMAINCATEGORY,MEMBERMIDDLECATEGORY,MEMBERSUBCATEGORY,YEAR,MONTH,BOOKINGTIME,BOOKINGCOUNT,FACILITYNUMBER) values ('IT소프트웨어3학생20년11월 시설예약통계','학생','IT소프트웨어','3',20,11,2,1,'S010601');
Insert into SCOTT.FACILITYUSESTATISTICS (STATISTICSNAME,MEMBERMAINCATEGORY,MEMBERMIDDLECATEGORY,MEMBERSUBCATEGORY,YEAR,MONTH,BOOKINGTIME,BOOKINGCOUNT,FACILITYNUMBER) values ('기계시스템3학생20년11월 시설예약통계','학생','기계시스템','3',20,11,2,1,'S010601');
REM INSERTING into SCOTT.GET
SET DEFINE OFF;
Insert into SCOTT.GET (GET_DIVISION_CODE,BUSINESS_CODE,GET_BREAKDOWN,GET_NUMBER,GET_PRICE,GET_DAY,MANAGER,NOTE,GET_TYPE) values ('G20013001','C19042101','(가시소년)만화 보다가 하버드 갔습니다',2,12240,to_timestamp('20/01/30 00:00','RR/MM/DD HH24:MI'),'김담당',null,'구입');
Insert into SCOTT.GET (GET_DIVISION_CODE,BUSINESS_CODE,GET_BREAKDOWN,GET_NUMBER,GET_PRICE,GET_DAY,MANAGER,NOTE,GET_TYPE) values ('G20013002','C19042101','(탁석산의)글짓는 도서관 v.1~v.3',6,47400,to_timestamp('20/01/30 00:00','RR/MM/DD HH24:MI'),'김담당',null,'구입');
Insert into SCOTT.GET (GET_DIVISION_CODE,BUSINESS_CODE,GET_BREAKDOWN,GET_NUMBER,GET_PRICE,GET_DAY,MANAGER,NOTE,GET_TYPE) values ('G20013003','C20012101','(가로세로) 한국사퍼즐',1,13500,to_timestamp('20/01/30 00:00','RR/MM/DD HH24:MI'),'김담당',null,'구입');
Insert into SCOTT.GET (GET_DIVISION_CODE,BUSINESS_CODE,GET_BREAKDOWN,GET_NUMBER,GET_PRICE,GET_DAY,MANAGER,NOTE,GET_TYPE) values ('G20013004','C19052101','(겨울왕국의)무민',1,24750,to_timestamp('20/01/30 00:00','RR/MM/DD HH24:MI'),'김담당',null,'구입');
Insert into SCOTT.GET (GET_DIVISION_CODE,BUSINESS_CODE,GET_BREAKDOWN,GET_NUMBER,GET_PRICE,GET_DAY,MANAGER,NOTE,GET_TYPE) values ('G20013005','C19052101','금형저널',1,14400,to_timestamp('20/01/30 00:00','RR/MM/DD HH24:MI'),'김담당',null,'구입');
Insert into SCOTT.GET (GET_DIVISION_CODE,BUSINESS_CODE,GET_BREAKDOWN,GET_NUMBER,GET_PRICE,GET_DAY,MANAGER,NOTE,GET_TYPE) values ('G20022901','C20012101','유시민의 글쓰기 특강',1,10800,to_timestamp('20/02/29 00:00','RR/MM/DD HH24:MI'),'김담당',null,'구입');
Insert into SCOTT.GET (GET_DIVISION_CODE,BUSINESS_CODE,GET_BREAKDOWN,GET_NUMBER,GET_PRICE,GET_DAY,MANAGER,NOTE,GET_TYPE) values ('G20022902','C20012101','CD로 보는 세계사',1,16200,to_timestamp('20/02/29 00:00','RR/MM/DD HH24:MI'),'김담당',null,'구입');
Insert into SCOTT.GET (GET_DIVISION_CODE,BUSINESS_CODE,GET_BREAKDOWN,GET_NUMBER,GET_PRICE,GET_DAY,MANAGER,NOTE,GET_TYPE) values ('G20022903','C20052201','(새로운)호텔경영학',1,20900,to_timestamp('20/02/29 00:00','RR/MM/DD HH24:MI'),'김담당',null,'구입');
Insert into SCOTT.GET (GET_DIVISION_CODE,BUSINESS_CODE,GET_BREAKDOWN,GET_NUMBER,GET_PRICE,GET_DAY,MANAGER,NOTE,GET_TYPE) values ('G20022904','C20052201','신경 끄기의 기술',1,81000,to_timestamp('20/02/29 00:00','RR/MM/DD HH24:MI'),'김담당',null,'구입');
Insert into SCOTT.GET (GET_DIVISION_CODE,BUSINESS_CODE,GET_BREAKDOWN,GET_NUMBER,GET_PRICE,GET_DAY,MANAGER,NOTE,GET_TYPE) values ('G20033001','C19042101','90년생이 온다',1,103500,to_timestamp('20/03/30 00:00','RR/MM/DD HH24:MI'),'김담당',null,'구입');
Insert into SCOTT.GET (GET_DIVISION_CODE,BUSINESS_CODE,GET_BREAKDOWN,GET_NUMBER,GET_PRICE,GET_DAY,MANAGER,NOTE,GET_TYPE) values ('G20033002','C19042101','(안녕하세요)멀티미디어 홈페이지 만들기',1,14400,to_timestamp('20/03/30 00:00','RR/MM/DD HH24:MI'),'김담당',null,'구입');
Insert into SCOTT.GET (GET_DIVISION_CODE,BUSINESS_CODE,GET_BREAKDOWN,GET_NUMBER,GET_PRICE,GET_DAY,MANAGER,NOTE,GET_TYPE) values ('G20043001','C19052101','결국 성공하는 힘 :성공한 사람들의 7가지 공통점',1,8694,to_timestamp('20/04/30 00:00','RR/MM/DD HH24:MI'),'김담당',null,'구입');
Insert into SCOTT.GET (GET_DIVISION_CODE,BUSINESS_CODE,GET_BREAKDOWN,GET_NUMBER,GET_PRICE,GET_DAY,MANAGER,NOTE,GET_TYPE) values ('G20043002','C20012101','(지식의 세계 표준) 브리태니커 CD 2000',1,18000,to_timestamp('20/04/30 00:00','RR/MM/DD HH24:MI'),'김담당',null,'구입');
Insert into SCOTT.GET (GET_DIVISION_CODE,BUSINESS_CODE,GET_BREAKDOWN,GET_NUMBER,GET_PRICE,GET_DAY,MANAGER,NOTE,GET_TYPE) values ('G20053001','C20052201','Around World Video Visits',1,16650,to_timestamp('20/05/30 00:00','RR/MM/DD HH24:MI'),'김담당',null,'구입');
Insert into SCOTT.GET (GET_DIVISION_CODE,BUSINESS_CODE,GET_BREAKDOWN,GET_NUMBER,GET_PRICE,GET_DAY,MANAGER,NOTE,GET_TYPE) values ('G20053002','C19042101','하마터먼 열심히 살 뻔했다',1,124200,to_timestamp('20/05/30 00:00','RR/MM/DD HH24:MI'),'김담당',null,'구입');
Insert into SCOTT.GET (GET_DIVISION_CODE,BUSINESS_CODE,GET_BREAKDOWN,GET_NUMBER,GET_PRICE,GET_DAY,MANAGER,NOTE,GET_TYPE) values ('G20053003','C19042101','북유럽 신화',1,10584,to_timestamp('20/05/30 00:00','RR/MM/DD HH24:MI'),'김담당',null,'구입');
Insert into SCOTT.GET (GET_DIVISION_CODE,BUSINESS_CODE,GET_BREAKDOWN,GET_NUMBER,GET_PRICE,GET_DAY,MANAGER,NOTE,GET_TYPE) values ('G20063001','C19042101','요즘 애들, 요즘 어른들',1,144000,to_timestamp('20/06/30 00:00','RR/MM/DD HH24:MI'),'김담당',null,'구입');
Insert into SCOTT.GET (GET_DIVISION_CODE,BUSINESS_CODE,GET_BREAKDOWN,GET_NUMBER,GET_PRICE,GET_DAY,MANAGER,NOTE,GET_TYPE) values ('G20063002','C19052101','(계간)한국사회복지학',1,16200,to_timestamp('20/06/30 00:00','RR/MM/DD HH24:MI'),'김담당',null,'구입');
Insert into SCOTT.GET (GET_DIVISION_CODE,BUSINESS_CODE,GET_BREAKDOWN,GET_NUMBER,GET_PRICE,GET_DAY,MANAGER,NOTE,GET_TYPE) values ('G20073001','C20012101','대학내일',1,11700,to_timestamp('20/07/30 00:00','RR/MM/DD HH24:MI'),'김담당',null,'구입');
REM INSERTING into SCOTT.LOSS
SET DEFINE OFF;
Insert into SCOTT.LOSS (RENTNUMBER,LOSSDATE,LOSSPLACE,FEEPAYWHETHER) values ('RN201025',to_timestamp('20/11/26 18:14','RR/MM/DD HH24:MI'),'공원',null);
Insert into SCOTT.LOSS (RENTNUMBER,LOSSDATE,LOSSPLACE,FEEPAYWHETHER) values ('RN201109',to_timestamp('20/11/26 18:14','RR/MM/DD HH24:MI'),'학교',null);
REM INSERTING into SCOTT.LOSSSTATISTICS
SET DEFINE OFF;
Insert into SCOTT.LOSSSTATISTICS (STATISTICSNAME,MEMBERMAINCATEGORY,MEMBERMIDDLECATEGORY,MEMBERSUBCATEGORY,YEAR,MONTH,LOSSNUMBER) values ('IT소프트웨어3학생20년11월 분실통계','학생','IT소프트웨어','3',20,11,1);
Insert into SCOTT.LOSSSTATISTICS (STATISTICSNAME,MEMBERMAINCATEGORY,MEMBERMIDDLECATEGORY,MEMBERSUBCATEGORY,YEAR,MONTH,LOSSNUMBER) values ('항공경영교수20년11월 분실통계','교수','항공경영',null,20,11,1);
REM INSERTING into SCOTT.MAJOR_DEPARTMENT
SET DEFINE OFF;
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (1,'기계시스템');
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (2,'기계설계');
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (3,'전기');
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (4,'전자');
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (5,'산업안전');
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (6,'산업디자인');
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (7,'IT소프트웨어');
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (8,'건축설비');
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (9,'시각디자인');
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (10,'식품영양');
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (11,'3D프린팅금형');
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (12,'호텔관광');
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (13,'일본비즈니스');
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (14,'메카트로닉스');
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (15,'경영정보');
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (16,'U-보건의료행정');
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (17,'정보통신');
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (18,'e-비즈니스');
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (20,'애니메이션');
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (21,'유통물류');
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (22,'i-패션디자인');
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (23,'중국비즈니스');
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (24,'인테리어디자인');
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (25,'영상보안');
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (27,'모바일앱');
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (28,'보건복지');
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (29,'외식조리경영');
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (30,'아동보육');
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (31,'세무회계');
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (32,'항공경영');
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (33,'광고미디어경영');
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (45,'직원');
Insert into SCOTT.MAJOR_DEPARTMENT (MAJOR_DEPARTMENT_CODE,NAME) values (99,'교원');
REM INSERTING into SCOTT.MEMBERINFORMATION
SET DEFINE OFF;
Insert into SCOTT.MEMBERINFORMATION (MEMBERNUMBER,APPLYDAY,APPROVALDAY,AFFECTDAY,RENTABLEWHETHER,NAME,BIRTHDAY,PHONENUMBER,TELNUMBER,EMAIL,MAILNUMBER,ADDRESS,IDENTITY,GRADE,AFFILIATION,MAJOR_DEPARTMENT_CODE) values ('201607040',to_timestamp('16/03/09 15:34','RR/MM/DD HH24:MI'),to_timestamp('16/03/10 15:36','RR/MM/DD HH24:MI'),to_timestamp('21/02/20 15:38','RR/MM/DD HH24:MI'),'TRUE','신희권',to_timestamp('98/01/31 15:39','RR/MM/DD HH24:MI'),'010-5684-1246','032-349-5879','gmlrnjs131@naver.com',15981,'경기도 부천시 소사구 은성로 100번길 100-1','학생',3,'유한대학교',7);
Insert into SCOTT.MEMBERINFORMATION (MEMBERNUMBER,APPLYDAY,APPROVALDAY,AFFECTDAY,RENTABLEWHETHER,NAME,BIRTHDAY,PHONENUMBER,TELNUMBER,EMAIL,MAILNUMBER,ADDRESS,IDENTITY,GRADE,AFFILIATION,MAJOR_DEPARTMENT_CODE) values ('201407008',to_timestamp('14/03/05 15:34','RR/MM/DD HH24:MI'),to_timestamp('16/03/09 15:38','RR/MM/DD HH24:MI'),to_timestamp('22/02/21 15:38','RR/MM/DD HH24:MI'),'FALSE','배민기',to_timestamp('96/02/12 15:40','RR/MM/DD HH24:MI'),'010-1257-8687',null,'min@daum.net',14890,'서울특별시 구로구 경인로 8','학생',3,'유한대학교',1);
Insert into SCOTT.MEMBERINFORMATION (MEMBERNUMBER,APPLYDAY,APPROVALDAY,AFFECTDAY,RENTABLEWHETHER,NAME,BIRTHDAY,PHONENUMBER,TELNUMBER,EMAIL,MAILNUMBER,ADDRESS,IDENTITY,GRADE,AFFILIATION,MAJOR_DEPARTMENT_CODE) values ('H202099001',to_timestamp('20/03/02 15:35','RR/MM/DD HH24:MI'),to_timestamp('20/03/05 15:38','RR/MM/DD HH24:MI'),to_timestamp('23/02/22 15:39','RR/MM/DD HH24:MI'),'TRUE','이고딩',to_timestamp('04/12/22 15:40','RR/MM/DD HH24:MI'),'010-7782-4237','02-349-4487','highS@naver.com',17789,'서울특별시 구로구 오리로 20길 28 강남그린아파트 104동 103호','학생',1,'유한공업고등학교',99);
Insert into SCOTT.MEMBERINFORMATION (MEMBERNUMBER,APPLYDAY,APPROVALDAY,AFFECTDAY,RENTABLEWHETHER,NAME,BIRTHDAY,PHONENUMBER,TELNUMBER,EMAIL,MAILNUMBER,ADDRESS,IDENTITY,GRADE,AFFILIATION,MAJOR_DEPARTMENT_CODE) values ('I201945001',to_timestamp('19/03/03 15:35','RR/MM/DD HH24:MI'),to_timestamp('20/03/06 15:38','RR/MM/DD HH24:MI'),to_timestamp('21/03/07 15:39','RR/MM/DD HH24:MI'),'TRUE','최직원',to_timestamp('80/08/21 15:40','RR/MM/DD HH24:MI'),'010-9978-2357','032-349-1423','choi@yuhan.ac.kr',15792,'경기 부천시 지봉로70번길 24','교직원',null,'유한대학교',45);
Insert into SCOTT.MEMBERINFORMATION (MEMBERNUMBER,APPLYDAY,APPROVALDAY,AFFECTDAY,RENTABLEWHETHER,NAME,BIRTHDAY,PHONENUMBER,TELNUMBER,EMAIL,MAILNUMBER,ADDRESS,IDENTITY,GRADE,AFFILIATION,MAJOR_DEPARTMENT_CODE) values ('P202032001',to_timestamp('20/11/07 16:41','RR/MM/DD HH24:MI'),to_timestamp('20/11/09 16:40','RR/MM/DD HH24:MI'),to_timestamp('20/11/10 16:41','RR/MM/DD HH24:MI'),'TRUE','김교수',to_timestamp('60/01/12 16:42','RR/MM/DD HH24:MI'),'010-5223-5687',null,'kim@yuhan.ac.kr',17789,'서울특별시 구로구 오리로 20길 28 강남그린아파트 101동 103호','교수',null,'유한대학교',32);
REM INSERTING into SCOTT.OUTSIDERPERSON
SET DEFINE OFF;
Insert into SCOTT.OUTSIDERPERSON (OUTSIDERPERSON_CODE,NAME,AFFECTTERM,ISSUEDAY,RESIDENTNUMBER,PHONENUMBER,NOTE) values ('A0001','김소정',to_timestamp('20/11/09 15:52','RR/MM/DD HH24:MI'),to_timestamp('20/11/09 15:53','RR/MM/DD HH24:MI'),'951207-2751123','010-1478-2234','견학');
Insert into SCOTT.OUTSIDERPERSON (OUTSIDERPERSON_CODE,NAME,AFFECTTERM,ISSUEDAY,RESIDENTNUMBER,PHONENUMBER,NOTE) values ('A0002','정은비',to_timestamp('20/11/10 15:52','RR/MM/DD HH24:MI'),to_timestamp('20/11/10 15:53','RR/MM/DD HH24:MI'),'970530-2172589','010-8842-4712','방역');
Insert into SCOTT.OUTSIDERPERSON (OUTSIDERPERSON_CODE,NAME,AFFECTTERM,ISSUEDAY,RESIDENTNUMBER,PHONENUMBER,NOTE) values ('A0003','김예원',to_timestamp('20/11/12 15:52','RR/MM/DD HH24:MI'),to_timestamp('20/11/11 15:53','RR/MM/DD HH24:MI'),'980819-2468795','010-2348-3475','도서 열람');
REM INSERTING into SCOTT.OVERDUESTATISTICS
SET DEFINE OFF;
Insert into SCOTT.OVERDUESTATISTICS (STATISTICSNAME,MEMBERMAINCATEGORY,MEMBERMIDDLECATEGORY,MEMBERSUBCATEGORY,YEAR,MONTH,OVERDUENUMBER) values ('직원교직원20년11월 연체통계','교직원','직원',null,20,11,1);
REM INSERTING into SCOTT.PC_USEBREAKDOWN
SET DEFINE OFF;
REM INSERTING into SCOTT.PENALTY_CLASS
SET DEFINE OFF;
Insert into SCOTT.PENALTY_CLASS (CLASS_CODE,PENALTYLIST,VIOLATIONLIST) values ('A ','일주일 대여 불가','연체 3일, 예약 무단취소 1회');
Insert into SCOTT.PENALTY_CLASS (CLASS_CODE,PENALTYLIST,VIOLATIONLIST) values ('B ','보름간 대여 불가','연체 10일 이하, 예약 무단취소 3회, 소란 1회');
Insert into SCOTT.PENALTY_CLASS (CLASS_CODE,PENALTYLIST,VIOLATIONLIST) values ('C ','도서관 한달 이용정지','연체 1달이하, 예약 무단취소 5회, 소란 3회');
Insert into SCOTT.PENALTY_CLASS (CLASS_CODE,PENALTYLIST,VIOLATIONLIST) values ('D ','해당 자료 및 시설 2배 변상','자료 훼손 시설 훼손');
REM INSERTING into SCOTT.PENALTYADMINISTRATION
SET DEFINE OFF;
Insert into SCOTT.PENALTYADMINISTRATION (PNUMBER,MEMBERNUMBER,CLASS_CODE,REGISTRATIONDAY,AFFECTDAY,EXTINCTIONDAY,NOTE) values (1,'201407008','B ',to_timestamp('20/11/09 16:02','RR/MM/DD HH24:MI'),to_timestamp('20/11/24 16:02','RR/MM/DD HH24:MI'),to_timestamp('20/11/25 16:02','RR/MM/DD HH24:MI'),'8일 연체');
REM INSERTING into SCOTT.PUBLICATION
SET DEFINE OFF;
REM INSERTING into SCOTT.PUBLICATION_INFORMATION
SET DEFINE OFF;
REM INSERTING into SCOTT.RENT
SET DEFINE OFF;
Insert into SCOTT.RENT (RENTNUMBER,REGISTRATIONNUMBER,MEMBERNUMBER,RENTDAY,RETURNSCHEDULEDAY,RETURNDAY,RENTTYPE,EXTENSIONWHETHER,RENEWALDAY,RENTPLACE_IP,RETROCATIVERETURN,RENTMANAGER,RETURNMANAGER) values ('RN201025','E063399','201607040',to_timestamp('20/10/25 00:00','RR/MM/DD HH24:MI'),to_timestamp('20/11/25 00:00','RR/MM/DD HH24:MI'),null,'장기','TRUE',to_timestamp('20/12/02 00:00','RR/MM/DD HH24:MI'),'172.18.13.15','TRUE','조재영','호지원');
Insert into SCOTT.RENT (RENTNUMBER,REGISTRATIONNUMBER,MEMBERNUMBER,RENTDAY,RETURNSCHEDULEDAY,RETURNDAY,RENTTYPE,EXTENSIONWHETHER,RENEWALDAY,RENTPLACE_IP,RETROCATIVERETURN,RENTMANAGER,RETURNMANAGER) values ('RN201026','E095717','P202032001',to_timestamp('20/10/25 00:00','RR/MM/DD HH24:MI'),to_timestamp('20/11/08 00:00','RR/MM/DD HH24:MI'),to_timestamp('20/11/07 00:00','RR/MM/DD HH24:MI'),'단기','FALSE',null,'172.18.13.15','FALSE','조재영','호지원');
Insert into SCOTT.RENT (RENTNUMBER,REGISTRATIONNUMBER,MEMBERNUMBER,RENTDAY,RETURNSCHEDULEDAY,RETURNDAY,RENTTYPE,EXTENSIONWHETHER,RENEWALDAY,RENTPLACE_IP,RETROCATIVERETURN,RENTMANAGER,RETURNMANAGER) values ('RN201027','E152040','H202099001',to_timestamp('20/10/25 00:00','RR/MM/DD HH24:MI'),to_timestamp('20/11/25 00:00','RR/MM/DD HH24:MI'),null,'장기','FALSE',null,'172.18.14.15','TRUE','조재영','호지원');
Insert into SCOTT.RENT (RENTNUMBER,REGISTRATIONNUMBER,MEMBERNUMBER,RENTDAY,RETURNSCHEDULEDAY,RETURNDAY,RENTTYPE,EXTENSIONWHETHER,RENEWALDAY,RENTPLACE_IP,RETROCATIVERETURN,RENTMANAGER,RETURNMANAGER) values ('RN201028','E055305','I201945001',to_timestamp('20/10/27 00:00','RR/MM/DD HH24:MI'),to_timestamp('20/11/27 00:00','RR/MM/DD HH24:MI'),to_timestamp('20/11/05 00:00','RR/MM/DD HH24:MI'),'장기','FALSE',null,'172.18.13.15','TRUE','윤채린','호지원');
Insert into SCOTT.RENT (RENTNUMBER,REGISTRATIONNUMBER,MEMBERNUMBER,RENTDAY,RETURNSCHEDULEDAY,RETURNDAY,RENTTYPE,EXTENSIONWHETHER,RENEWALDAY,RENTPLACE_IP,RETROCATIVERETURN,RENTMANAGER,RETURNMANAGER) values ('RN201029','E063399','201607040',to_timestamp('20/10/27 00:00','RR/MM/DD HH24:MI'),to_timestamp('20/11/10 00:00','RR/MM/DD HH24:MI'),null,'단기','TRUE',to_timestamp('20/11/17 00:00','RR/MM/DD HH24:MI'),'172.18.14.15','TRUE','조재영','호지원');
Insert into SCOTT.RENT (RENTNUMBER,REGISTRATIONNUMBER,MEMBERNUMBER,RENTDAY,RETURNSCHEDULEDAY,RETURNDAY,RENTTYPE,EXTENSIONWHETHER,RENEWALDAY,RENTPLACE_IP,RETROCATIVERETURN,RENTMANAGER,RETURNMANAGER) values ('RN201101','E095717','201607040',to_timestamp('20/11/01 00:00','RR/MM/DD HH24:MI'),to_timestamp('20/11/15 00:00','RR/MM/DD HH24:MI'),to_timestamp('20/11/10 00:00','RR/MM/DD HH24:MI'),'단기','FALSE',null,'172.18.13.15','FALSE','조재영','호지원');
Insert into SCOTT.RENT (RENTNUMBER,REGISTRATIONNUMBER,MEMBERNUMBER,RENTDAY,RETURNSCHEDULEDAY,RETURNDAY,RENTTYPE,EXTENSIONWHETHER,RENEWALDAY,RENTPLACE_IP,RETROCATIVERETURN,RENTMANAGER,RETURNMANAGER) values ('RN201104','E152040','201607040',to_timestamp('20/11/04 00:00','RR/MM/DD HH24:MI'),to_timestamp('20/11/18 00:00','RR/MM/DD HH24:MI'),null,'단기','TRUE',to_timestamp('20/11/25 00:00','RR/MM/DD HH24:MI'),'172.18.13.15','FALSE','조재영','서나연');
Insert into SCOTT.RENT (RENTNUMBER,REGISTRATIONNUMBER,MEMBERNUMBER,RENTDAY,RETURNSCHEDULEDAY,RETURNDAY,RENTTYPE,EXTENSIONWHETHER,RENEWALDAY,RENTPLACE_IP,RETROCATIVERETURN,RENTMANAGER,RETURNMANAGER) values ('RN201109','E055305','P202032001',to_timestamp('20/11/09 00:00','RR/MM/DD HH24:MI'),to_timestamp('20/11/23 00:00','RR/MM/DD HH24:MI'),null,'단기','FALSE',null,'172.18.13.15','FALSE','조재영','호지원');
Insert into SCOTT.RENT (RENTNUMBER,REGISTRATIONNUMBER,MEMBERNUMBER,RENTDAY,RETURNSCHEDULEDAY,RETURNDAY,RENTTYPE,EXTENSIONWHETHER,RENEWALDAY,RENTPLACE_IP,RETROCATIVERETURN,RENTMANAGER,RETURNMANAGER) values ('RN201110','E152040','H202099001',to_timestamp('20/11/09 00:00','RR/MM/DD HH24:MI'),to_timestamp('20/11/16 00:00','RR/MM/DD HH24:MI'),to_timestamp('20/11/10 00:00','RR/MM/DD HH24:MI'),'장기','FALSE',null,'172.18.14.15','FALSE','신희권','호지원');
Insert into SCOTT.RENT (RENTNUMBER,REGISTRATIONNUMBER,MEMBERNUMBER,RENTDAY,RETURNSCHEDULEDAY,RETURNDAY,RENTTYPE,EXTENSIONWHETHER,RENEWALDAY,RENTPLACE_IP,RETROCATIVERETURN,RENTMANAGER,RETURNMANAGER) values ('RN201111','E055305','I201945001',to_timestamp('20/11/12 00:00','RR/MM/DD HH24:MI'),to_timestamp('20/11/26 00:00','RR/MM/DD HH24:MI'),null,'단기','TRUE',to_timestamp('20/11/30 00:00','RR/MM/DD HH24:MI'),'172.18.13.15','TRUE','조재영','호지원');
REM INSERTING into SCOTT.RENTBOOKING
SET DEFINE OFF;
REM INSERTING into SCOTT.RENTSTATISTICS
SET DEFINE OFF;
Insert into SCOTT.RENTSTATISTICS (STATISTICSNAME,MEMBERMAINCATEGORY,MEMBERMIDDLECATEGORY,MEMBERSUBCATEGORY,YEAR,MONTH,RENTNUMBER) values ('IT소프트웨어3학년학생20년10월 대출통계','학생','IT소프트웨어','3학년',20,10,2);
Insert into SCOTT.RENTSTATISTICS (STATISTICSNAME,MEMBERMAINCATEGORY,MEMBERMIDDLECATEGORY,MEMBERSUBCATEGORY,YEAR,MONTH,RENTNUMBER) values ('항공경영교수20년10월 대출통계','교수','항공경영',null,20,10,1);
Insert into SCOTT.RENTSTATISTICS (STATISTICSNAME,MEMBERMAINCATEGORY,MEMBERMIDDLECATEGORY,MEMBERSUBCATEGORY,YEAR,MONTH,RENTNUMBER) values ('교원1학년학생20년10월 대출통계','학생','교원','1학년',20,10,1);
Insert into SCOTT.RENTSTATISTICS (STATISTICSNAME,MEMBERMAINCATEGORY,MEMBERMIDDLECATEGORY,MEMBERSUBCATEGORY,YEAR,MONTH,RENTNUMBER) values ('직원교직원20년10월 대출통계','교직원','직원',null,20,10,1);
Insert into SCOTT.RENTSTATISTICS (STATISTICSNAME,MEMBERMAINCATEGORY,MEMBERMIDDLECATEGORY,MEMBERSUBCATEGORY,YEAR,MONTH,RENTNUMBER) values ('IT소프트웨어3학년학생20년11월 대출통계','학생','IT소프트웨어','3학년',20,11,2);
Insert into SCOTT.RENTSTATISTICS (STATISTICSNAME,MEMBERMAINCATEGORY,MEMBERMIDDLECATEGORY,MEMBERSUBCATEGORY,YEAR,MONTH,RENTNUMBER) values ('항공경영교수20년11월 대출통계','교수','항공경영',null,20,11,1);
Insert into SCOTT.RENTSTATISTICS (STATISTICSNAME,MEMBERMAINCATEGORY,MEMBERMIDDLECATEGORY,MEMBERSUBCATEGORY,YEAR,MONTH,RENTNUMBER) values ('교원1학년학생20년11월 대출통계','학생','교원','1학년',20,11,1);
Insert into SCOTT.RENTSTATISTICS (STATISTICSNAME,MEMBERMAINCATEGORY,MEMBERMIDDLECATEGORY,MEMBERSUBCATEGORY,YEAR,MONTH,RENTNUMBER) values ('직원교직원20년11월 대출통계','교직원','직원',null,20,11,1);
REM INSERTING into SCOTT.WISH_BOOK
SET DEFINE OFF;
REM INSERTING into SCOTT.WISH_PUBLICATION_APPLY
SET DEFINE OFF;
Insert into SCOTT.WISH_PUBLICATION_APPLY (WISH_PUBLICATION_CODE,PUBLICATIONNAME,SUPPLYPLACENAME,ISSN,APPLYREASON,SUBSCRIPTIONDIVISION,NOTE,APPLYDATE,MAJOR_DEPARTMENT_CODE) values ('HF20110901','과학동아','동아사이언스',12283401,'과학을 학습하는데 도움이 될 것이라 생각','연장',null,to_timestamp('20/11/09 15:28','RR/MM/DD HH24:MI'),1);
Insert into SCOTT.WISH_PUBLICATION_APPLY (WISH_PUBLICATION_CODE,PUBLICATIONNAME,SUPPLYPLACENAME,ISSN,APPLYREASON,SUBSCRIPTIONDIVISION,NOTE,APPLYDATE,MAJOR_DEPARTMENT_CODE) values ('HF20110902','컴퓨터음악','사운드릭스',22885439,'관련 정보를 학습하기 위함','신규',null,to_timestamp('20/11/09 15:28','RR/MM/DD HH24:MI'),1);
Insert into SCOTT.WISH_PUBLICATION_APPLY (WISH_PUBLICATION_CODE,PUBLICATIONNAME,SUPPLYPLACENAME,ISSN,APPLYREASON,SUBSCRIPTIONDIVISION,NOTE,APPLYDATE,MAJOR_DEPARTMENT_CODE) values ('HF20110903','금연이슈&포럼','한국건강증진개발원',27341054,'학생들의 금연을 위함','신규',null,to_timestamp('20/11/09 15:29','RR/MM/DD HH24:MI'),1);
Insert into SCOTT.WISH_PUBLICATION_APPLY (WISH_PUBLICATION_CODE,PUBLICATIONNAME,SUPPLYPLACENAME,ISSN,APPLYREASON,SUBSCRIPTIONDIVISION,NOTE,APPLYDATE,MAJOR_DEPARTMENT_CODE) values ('HF20111001','아이디어 공모전 수상작 모음집','김해시복지재단',2734178,'학생들의 창의력 상승을 위함','연장',null,to_timestamp('20/11/10 15:29','RR/MM/DD HH24:MI'),1);
--------------------------------------------------------
--  DDL for Index XPK오디오북
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCOTT"."XPK오디오북" ON "SCOTT"."AUDIOBOOK" ("REGISTRATIONNUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index XPK시청각_자료
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCOTT"."XPK시청각_자료" ON "SCOTT"."AUDIOVISUAL_DATA" ("REGISTRATIONNUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index XPK도서
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCOTT"."XPK도서" ON "SCOTT"."BOOK" ("REGISTRATIONNUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index XPK업체관리
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCOTT"."XPK업체관리" ON "SCOTT"."BUSINESSADMINISTRATION" ("BUSINESS_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index XPK자료
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCOTT"."XPK자료" ON "SCOTT"."DATA" ("REGISTRATIONNUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index XPKE_BOOK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCOTT"."XPKE_BOOK" ON "SCOTT"."E_BOOK" ("REGISTRATIONNUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index XPK출입_기록
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCOTT"."XPK출입_기록" ON "SCOTT"."ENTER_RECORD" ("ENTER_RECORD_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index XPK출입통계
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCOTT"."XPK출입통계" ON "SCOTT"."ENTERSTATISTICS" ("STATISTICSNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index XPK시설
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCOTT"."XPK시설" ON "SCOTT"."FACILITY" ("FACILITYNUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index XPK시설이용예약
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCOTT"."XPK시설이용예약" ON "SCOTT"."FACILITYUSEBOOKING" ("BOOKINGNUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index XPK시설이용통계
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCOTT"."XPK시설이용통계" ON "SCOTT"."FACILITYUSESTATISTICS" ("STATISTICSNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index XPK입수
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCOTT"."XPK입수" ON "SCOTT"."GET" ("GET_DIVISION_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index XPK분실
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCOTT"."XPK분실" ON "SCOTT"."LOSS" ("RENTNUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index XPK분실통계
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCOTT"."XPK분실통계" ON "SCOTT"."LOSSSTATISTICS" ("STATISTICSNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index XPK학과_부서
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCOTT"."XPK학과_부서" ON "SCOTT"."MAJOR_DEPARTMENT" ("MAJOR_DEPARTMENT_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index XPK회원정보
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCOTT"."XPK회원정보" ON "SCOTT"."MEMBERINFORMATION" ("MEMBERNUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index XPK외부인
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCOTT"."XPK외부인" ON "SCOTT"."OUTSIDERPERSON" ("OUTSIDERPERSON_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index XPK연체통계
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCOTT"."XPK연체통계" ON "SCOTT"."OVERDUESTATISTICS" ("STATISTICSNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index XPKPC_이용내역
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCOTT"."XPKPC_이용내역" ON "SCOTT"."PC_USEBREAKDOWN" ("USEBREAKDOWNNUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index XPK패널티_등급
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCOTT"."XPK패널티_등급" ON "SCOTT"."PENALTY_CLASS" ("CLASS_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index XPK패널티관리
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCOTT"."XPK패널티관리" ON "SCOTT"."PENALTYADMINISTRATION" ("PNUMBER", "MEMBERNUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index XPK간행물
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCOTT"."XPK간행물" ON "SCOTT"."PUBLICATION" ("ISSN") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index XPK간행물_정보
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCOTT"."XPK간행물_정보" ON "SCOTT"."PUBLICATION_INFORMATION" ("REGISTRATIONNUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index XPK대출
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCOTT"."XPK대출" ON "SCOTT"."RENT" ("RENTNUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index XPK대출예약
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCOTT"."XPK대출예약" ON "SCOTT"."RENTBOOKING" ("RENTBOOKINGNUMBER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index XPK대출통계
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCOTT"."XPK대출통계" ON "SCOTT"."RENTSTATISTICS" ("STATISTICSNAME") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index XPK희망_도서
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCOTT"."XPK희망_도서" ON "SCOTT"."WISH_BOOK" ("WISH_BOOK_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index XPK희망_간행물_신청
--------------------------------------------------------

  CREATE UNIQUE INDEX "SCOTT"."XPK희망_간행물_신청" ON "SCOTT"."WISH_PUBLICATION_APPLY" ("WISH_PUBLICATION_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Trigger ENTER_TRI
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SCOTT"."ENTER_TRI" 
after INSERT ON enter_record
for each row
declare
    cnt number;
    v_identity varchar2(2000);
    v_grade varchar2(2000);
    v_name varchar2(2000);
    v_membercategory varchar2(2000);

BEGIN


   if(NVL(:new.OUTSIDERPERSON_CODE,0)=1) then
   	select identity into v_identity
	from memberinformation
	where membernumber= :new.membernumber;

	if ( v_identity = '학생'  ) then
	select d.name into v_name
	from memberinformation m, major_department d
	where m.major_department_code = d.MAJOR_DEPARTMENT_CODE and membernumber = :new.membernumber;

	select m.grade into v_grade
	from memberinformation m, major_department d
	where m.major_department_code = d.MAJOR_DEPARTMENT_CODE and membernumber= :new.membernumber;
	v_membercategory:='';

	elsif  ( v_identity = '교수'  ) then
	select d.name into v_name
	from memberinformation m, major_department d
	where m.major_department_code = d.MAJOR_DEPARTMENT_CODE and membernumber= :new.membernumber;

 	v_grade:='';
	v_membercategory:='';

	elsif  ( v_identity = '교직원'  ) then
	select d.name into v_name
	from memberinformation m, major_department d
	where m.major_department_code = d.MAJOR_DEPARTMENT_CODE and membernumber= :new.membernumber;

	v_grade:='';
	v_membercategory:='';

	else
	v_identity:='기타';
	v_name:='';
	v_grade:='';   
	v_membercategory:='';
	end if;
  else
	v_membercategory:='외부인';
	v_identity:='외부인';
	v_name:='';
	v_grade:='';   
   end if;


   SELECT COUNT (*) into cnt
   FROM  enterstatistics                  
   WHERE membermaincategory=v_identity and membermiddlecategory =v_name and membersubcategory =v_grade and
             year= to_number(to_char(:new.enter_day,'yy')) and month=to_number(to_char(:new.enter_day,'mm'));


    if ( cnt > 0  ) then
        update enterstatistics set entervalue=entervalue+1 
   WHERE membermaincategory=v_identity and membermiddlecategory =v_name and membersubcategory =v_grade and
   year= to_number(to_char(:new.enter_day,'yy')) and month=to_number(to_char(:new.enter_day,'mm'));  

    else 
        insert into enterstatistics(statisticsname,membermaincategory,membermiddlecategory,membersubcategory,year,month,entervalue,membercategory) 
        VALUES(v_name||v_grade||v_identity||to_char(:new.enter_day,'yy')||'년'||to_char(:new.enter_day,'mm')||'월 출입통계',v_identity,v_name,v_grade,to_number(to_char(:new.enter_day,'yy')),to_number(to_char(:new.enter_day,'mm')),1,v_membercategory);
    end if;

END;
/
ALTER TRIGGER "SCOTT"."ENTER_TRI" ENABLE;
--------------------------------------------------------
--  DDL for Trigger FACILITYUSE_TRI
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SCOTT"."FACILITYUSE_TRI" 
after INSERT ON facilityusebooking
for each row
declare
    cnt number;
    v_identity varchar2(2000);
    v_grade varchar2(2000);
    v_name varchar2(2000);

BEGIN

   select identity into v_identity
   from memberinformation
   where membernumber= :new.membernumber;

   if ( v_identity = '학생'  ) then
   select d.name into v_name
   from memberinformation m, major_department d
   where m.major_department_code = d.MAJOR_DEPARTMENT_CODE and membernumber = :new.membernumber;

   select m.grade into v_grade
   from memberinformation m, major_department d
   where m.major_department_code = d.MAJOR_DEPARTMENT_CODE and membernumber= :new.membernumber;

   elsif  ( v_identity = '교수'  ) then
   select d.name into v_name
   from memberinformation m, major_department d
   where m.major_department_code = d.MAJOR_DEPARTMENT_CODE and membernumber= :new.membernumber;

   v_grade:='';

   elsif  ( v_identity = '교직원'  ) then
   select d.name into v_name
   from memberinformation m, major_department d
   where m.major_department_code = d.MAJOR_DEPARTMENT_CODE and membernumber= :new.membernumber;

   v_grade:='';

   else
   v_identity:='기타';
   v_name:='';
   v_grade:='';   

   end if;



   SELECT COUNT (*) into cnt
   FROM  facilityusestatistics                  
   WHERE membermaincategory=v_identity and membermiddlecategory =v_name and membersubcategory =v_grade and
             year= to_number(to_char(:new.usedate,'yy')) and month=to_number(to_char(:new.usedate,'mm')) and facilitynumber = :new.facilitynumber;


    if ( cnt > 0  ) then
        update facilityusestatistics set bookingcount=bookingcount+1 
   WHERE membermaincategory=v_identity and membermiddlecategory =v_name and membersubcategory =v_grade and
   year= to_number(to_char(:new.usedate,'yy')) and month=to_number(to_char(:new.usedate,'mm')) and facilitynumber = :new.facilitynumber;  
     update facilityusestatistics set bookingtime=bookingtime+:new.usetime
   WHERE membermaincategory=v_identity and membermiddlecategory =v_name and membersubcategory =v_grade and
   year= to_number(to_char(:new.usedate,'yy')) and month=to_number(to_char(:new.usedate,'mm')) and facilitynumber = :new.facilitynumber;  
    else 
        insert into facilityusestatistics(statisticsname,membermaincategory,membermiddlecategory,membersubcategory,year,month,bookingtime,bookingcount,facilitynumber) 
        VALUES(v_name||v_grade||v_identity||to_char(:new.usedate,'yy')||'년'||to_char(:new.usedate,'mm')||'월 시설예약통계',v_identity,v_name,v_grade,to_number(to_char(:new.usedate,'yy')),to_number(to_char(:new.usedate,'mm')),:new.usetime,1,:new.facilitynumber);
    end if;

END;
/
ALTER TRIGGER "SCOTT"."FACILITYUSE_TRI" ENABLE;
--------------------------------------------------------
--  DDL for Trigger LOSSSTATISTICS_TRI
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SCOTT"."LOSSSTATISTICS_TRI" 
after INSERT ON loss
for each row
declare
  cnt number;
  v_identity varchar2(2000);
  v_grade varchar2(2000);
  v_name varchar2(2000);
  v_membernumber varchar2(2000);
  v_rentnumber varchar2(2000);

Begin
    select membernumber into v_membernumber
    from rent
    where rentnumber = :new.rentnumber;

   select identity into v_identity
   from memberinformation
   where membernumber= v_membernumber;

   if ( v_identity = '학생'  ) then
   select d.name into v_name
   from memberinformation m, MAJOR_DEPARTMENT d
   where m.major_department_code = d.major_department_code and membernumber=v_membernumber;

   select m.grade into v_grade
   from memberinformation m, MAJOR_DEPARTMENT d
   where m.major_department_code = d.major_department_code and membernumber=v_membernumber;

   elsif  ( v_identity = '교수'  ) then
   select d.name into v_name
   from memberinformation m, MAJOR_DEPARTMENT d
   where m.major_department_code = d.major_department_code and membernumber=v_membernumber;
   v_grade:='';

   elsif  ( v_identity = '교직원'  ) then
   select d.name into v_name
   from memberinformation m, MAJOR_DEPARTMENT d
   where m.major_department_code = d.major_department_code and membernumber=v_membernumber;

   v_grade:='';

   else
   v_identity:='기타';
   v_name:='';
   v_grade:='';   

   end if;

   SELECT COUNT (*) into cnt
   FROM  lossstatistics
   WHERE membermaincategory=v_identity and membermiddlecategory =v_name and membersubcategory =v_grade and
             year= to_number(to_char(:new.lossdate,'yy')) and month=to_number(to_char(:new.lossdate,'mm'));

 if ( cnt > 0  ) then
        update lossstatistics set lossnumber=lossnumber+1 
   WHERE membermaincategory=v_identity and membermiddlecategory =v_name and membersubcategory =v_grade and
   year= to_number(to_char(:new.lossdate,'yy')) and month=to_number(to_char(:new.lossdate,'mm'));  

    else 
        insert into lossstatistics(statisticsname,membermaincategory,membermiddlecategory,membersubcategory,year,month,lossnumber) 
        VALUES(v_name||v_grade||v_identity||to_char(:new.lossdate,'yy')||'년'||to_char(:new.lossdate,'mm')||'월 분실통계',v_identity,v_name,v_grade,to_number(to_char(:new.lossdate,'yy')),to_number(to_char(:new.lossdate,'mm')),1);
    end if;

END;
/
ALTER TRIGGER "SCOTT"."LOSSSTATISTICS_TRI" ENABLE;
--------------------------------------------------------
--  DDL for Trigger RENTSTATISTICS_TRI
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SCOTT"."RENTSTATISTICS_TRI" 
after INSERT ON rent
for each row
declare
  cnt number;
  v_identity varchar2(2000);
  v_grade varchar2(2000);
  v_name varchar2(2000);

Begin
   select m.identity into v_identity
   from memberinformation m
   where membernumber= :new.membernumber;

   if ( v_identity = '학생'  ) then
   select d.name into v_name
   from memberinformation m, MAJOR_DEPARTMENT d
   where m.major_department_code = d.major_department_code and membernumber=:new.membernumber;

   select m.grade into v_grade
   from memberinformation m, MAJOR_DEPARTMENT d
   where m.major_department_code = d.major_department_code and membernumber=:new.membernumber;
   v_grade:=v_grade||'학년';

   elsif  ( v_identity = '교수'  ) then
   select d.name into v_name
   from memberinformation m, MAJOR_DEPARTMENT d
   where m.major_department_code = d.major_department_code and membernumber=:new.membernumber;

   v_grade:='';

   elsif  ( v_identity = '교직원'  ) then
   select d.name into v_name
   from memberinformation m, MAJOR_DEPARTMENT d
   where m.major_department_code = d.major_department_code and membernumber=:new.membernumber;

   v_grade:='';

   else
   v_identity:='기타';
   v_name:='';
   v_grade:='';   

   end if;

   SELECT COUNT (*) into cnt
   FROM  rentstatistics
   WHERE membermaincategory=v_identity and membermiddlecategory =v_name and membersubcategory =v_grade and
             year= to_number(to_char(:new.rentday,'yy')) and month=to_number(to_char(:new.rentday,'mm'));

 if ( cnt > 0  ) then
        update rentstatistics set rentnumber=rentnumber+1 
   WHERE membermaincategory=v_identity and membermiddlecategory =v_name and membersubcategory =v_grade and
   year= to_number(to_char(:new.rentday,'yy')) and month=to_number(to_char(:new.rentday,'mm'));  

    else 
        insert into rentstatistics(statisticsname,membermaincategory,membermiddlecategory,membersubcategory,year,month,rentnumber) 
        VALUES(v_name||v_grade||v_identity||to_char(:new.rentday,'yy')||'년'||to_char(:new.rentday,'mm')||'월 대출통계',v_identity,v_name,v_grade,to_number(to_char(:new.rentday,'yy')),to_number(to_char(:new.rentday,'mm')),1);
    end if;

END;
/
ALTER TRIGGER "SCOTT"."RENTSTATISTICS_TRI" ENABLE;
--------------------------------------------------------
--  Constraints for Table AUDIOBOOK
--------------------------------------------------------

  ALTER TABLE "SCOTT"."AUDIOBOOK" MODIFY ("REGISTRATIONNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."AUDIOBOOK" ADD CONSTRAINT "XPK오디오북" PRIMARY KEY ("REGISTRATIONNUMBER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table AUDIOVISUAL_DATA
--------------------------------------------------------

  ALTER TABLE "SCOTT"."AUDIOVISUAL_DATA" MODIFY ("REGISTRATIONNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."AUDIOVISUAL_DATA" ADD CONSTRAINT "XPK시청각_자료" PRIMARY KEY ("REGISTRATIONNUMBER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table BOOK
--------------------------------------------------------

  ALTER TABLE "SCOTT"."BOOK" MODIFY ("REGISTRATIONNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."BOOK" ADD CONSTRAINT "XPK도서" PRIMARY KEY ("REGISTRATIONNUMBER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table BUSINESSADMINISTRATION
--------------------------------------------------------

  ALTER TABLE "SCOTT"."BUSINESSADMINISTRATION" MODIFY ("BUSINESS_CODE" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."BUSINESSADMINISTRATION" ADD CONSTRAINT "XPK업체관리" PRIMARY KEY ("BUSINESS_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DATA
--------------------------------------------------------

  ALTER TABLE "SCOTT"."DATA" MODIFY ("REGISTRATIONNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."DATA" ADD CONSTRAINT "XPK자료" PRIMARY KEY ("REGISTRATIONNUMBER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table E_BOOK
--------------------------------------------------------

  ALTER TABLE "SCOTT"."E_BOOK" MODIFY ("REGISTRATIONNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."E_BOOK" ADD CONSTRAINT "XPKE_BOOK" PRIMARY KEY ("REGISTRATIONNUMBER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ENTER_RECORD
--------------------------------------------------------

  ALTER TABLE "SCOTT"."ENTER_RECORD" MODIFY ("ENTER_RECORD_CODE" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."ENTER_RECORD" ADD CONSTRAINT "XPK출입_기록" PRIMARY KEY ("ENTER_RECORD_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ENTERSTATISTICS
--------------------------------------------------------

  ALTER TABLE "SCOTT"."ENTERSTATISTICS" MODIFY ("STATISTICSNAME" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."ENTERSTATISTICS" ADD CONSTRAINT "XPK출입통계" PRIMARY KEY ("STATISTICSNAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table FACILITY
--------------------------------------------------------

  ALTER TABLE "SCOTT"."FACILITY" MODIFY ("FACILITYNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."FACILITY" ADD CONSTRAINT "XPK시설" PRIMARY KEY ("FACILITYNUMBER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table FACILITYUSEBOOKING
--------------------------------------------------------

  ALTER TABLE "SCOTT"."FACILITYUSEBOOKING" MODIFY ("BOOKINGNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."FACILITYUSEBOOKING" MODIFY ("MEMBERNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."FACILITYUSEBOOKING" MODIFY ("FACILITYNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."FACILITYUSEBOOKING" ADD CONSTRAINT "XPK시설이용예약" PRIMARY KEY ("BOOKINGNUMBER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table FACILITYUSESTATISTICS
--------------------------------------------------------

  ALTER TABLE "SCOTT"."FACILITYUSESTATISTICS" MODIFY ("STATISTICSNAME" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."FACILITYUSESTATISTICS" ADD CONSTRAINT "XPK시설이용통계" PRIMARY KEY ("STATISTICSNAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table GET
--------------------------------------------------------

  ALTER TABLE "SCOTT"."GET" MODIFY ("GET_DIVISION_CODE" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."GET" MODIFY ("BUSINESS_CODE" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."GET" ADD CONSTRAINT "XPK입수" PRIMARY KEY ("GET_DIVISION_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table LOSS
--------------------------------------------------------

  ALTER TABLE "SCOTT"."LOSS" MODIFY ("RENTNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."LOSS" ADD CONSTRAINT "XPK분실" PRIMARY KEY ("RENTNUMBER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table LOSSSTATISTICS
--------------------------------------------------------

  ALTER TABLE "SCOTT"."LOSSSTATISTICS" MODIFY ("STATISTICSNAME" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."LOSSSTATISTICS" ADD CONSTRAINT "XPK분실통계" PRIMARY KEY ("STATISTICSNAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table MAJOR_DEPARTMENT
--------------------------------------------------------

  ALTER TABLE "SCOTT"."MAJOR_DEPARTMENT" MODIFY ("MAJOR_DEPARTMENT_CODE" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."MAJOR_DEPARTMENT" ADD CONSTRAINT "XPK학과_부서" PRIMARY KEY ("MAJOR_DEPARTMENT_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table MEMBERINFORMATION
--------------------------------------------------------

  ALTER TABLE "SCOTT"."MEMBERINFORMATION" MODIFY ("MEMBERNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."MEMBERINFORMATION" MODIFY ("MAJOR_DEPARTMENT_CODE" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."MEMBERINFORMATION" ADD CONSTRAINT "XPK회원정보" PRIMARY KEY ("MEMBERNUMBER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table OUTSIDERPERSON
--------------------------------------------------------

  ALTER TABLE "SCOTT"."OUTSIDERPERSON" MODIFY ("OUTSIDERPERSON_CODE" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."OUTSIDERPERSON" ADD CONSTRAINT "XPK외부인" PRIMARY KEY ("OUTSIDERPERSON_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table OVERDUESTATISTICS
--------------------------------------------------------

  ALTER TABLE "SCOTT"."OVERDUESTATISTICS" MODIFY ("STATISTICSNAME" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."OVERDUESTATISTICS" ADD CONSTRAINT "XPK연체통계" PRIMARY KEY ("STATISTICSNAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PC_USEBREAKDOWN
--------------------------------------------------------

  ALTER TABLE "SCOTT"."PC_USEBREAKDOWN" MODIFY ("USEBREAKDOWNNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."PC_USEBREAKDOWN" MODIFY ("MEMBERNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."PC_USEBREAKDOWN" ADD CONSTRAINT "XPKPC_이용내역" PRIMARY KEY ("USEBREAKDOWNNUMBER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PENALTY_CLASS
--------------------------------------------------------

  ALTER TABLE "SCOTT"."PENALTY_CLASS" MODIFY ("CLASS_CODE" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."PENALTY_CLASS" ADD CONSTRAINT "XPK패널티_등급" PRIMARY KEY ("CLASS_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PENALTYADMINISTRATION
--------------------------------------------------------

  ALTER TABLE "SCOTT"."PENALTYADMINISTRATION" MODIFY ("PNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."PENALTYADMINISTRATION" MODIFY ("MEMBERNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."PENALTYADMINISTRATION" MODIFY ("CLASS_CODE" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."PENALTYADMINISTRATION" ADD CONSTRAINT "XPK패널티관리" PRIMARY KEY ("PNUMBER", "MEMBERNUMBER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PUBLICATION
--------------------------------------------------------

  ALTER TABLE "SCOTT"."PUBLICATION" MODIFY ("ISSN" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."PUBLICATION" ADD CONSTRAINT "XPK간행물" PRIMARY KEY ("ISSN")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PUBLICATION_INFORMATION
--------------------------------------------------------

  ALTER TABLE "SCOTT"."PUBLICATION_INFORMATION" MODIFY ("REGISTRATIONNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."PUBLICATION_INFORMATION" MODIFY ("ISSN" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."PUBLICATION_INFORMATION" ADD CONSTRAINT "XPK간행물_정보" PRIMARY KEY ("REGISTRATIONNUMBER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table RENT
--------------------------------------------------------

  ALTER TABLE "SCOTT"."RENT" MODIFY ("RENTNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."RENT" MODIFY ("REGISTRATIONNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."RENT" MODIFY ("MEMBERNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."RENT" ADD CONSTRAINT "XPK대출" PRIMARY KEY ("RENTNUMBER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table RENTBOOKING
--------------------------------------------------------

  ALTER TABLE "SCOTT"."RENTBOOKING" MODIFY ("RENTBOOKINGNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."RENTBOOKING" MODIFY ("REGISTRATIONNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."RENTBOOKING" MODIFY ("MEMBERNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."RENTBOOKING" ADD CONSTRAINT "XPK대출예약" PRIMARY KEY ("RENTBOOKINGNUMBER")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table RENTSTATISTICS
--------------------------------------------------------

  ALTER TABLE "SCOTT"."RENTSTATISTICS" MODIFY ("STATISTICSNAME" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."RENTSTATISTICS" ADD CONSTRAINT "XPK대출통계" PRIMARY KEY ("STATISTICSNAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table WISH_BOOK
--------------------------------------------------------

  ALTER TABLE "SCOTT"."WISH_BOOK" MODIFY ("WISH_BOOK_CODE" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."WISH_BOOK" MODIFY ("MEMBERNUMBER" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."WISH_BOOK" ADD CONSTRAINT "XPK희망_도서" PRIMARY KEY ("WISH_BOOK_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOCOMPRESS LOGGING
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table WISH_PUBLICATION_APPLY
--------------------------------------------------------

  ALTER TABLE "SCOTT"."WISH_PUBLICATION_APPLY" MODIFY ("WISH_PUBLICATION_CODE" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."WISH_PUBLICATION_APPLY" MODIFY ("MAJOR_DEPARTMENT_CODE" NOT NULL ENABLE);
 
  ALTER TABLE "SCOTT"."WISH_PUBLICATION_APPLY" ADD CONSTRAINT "XPK희망_간행물_신청" PRIMARY KEY ("WISH_PUBLICATION_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table AUDIOBOOK
--------------------------------------------------------

  ALTER TABLE "SCOTT"."AUDIOBOOK" ADD CONSTRAINT "R_3" FOREIGN KEY ("REGISTRATIONNUMBER")
	  REFERENCES "SCOTT"."DATA" ("REGISTRATIONNUMBER") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table AUDIOVISUAL_DATA
--------------------------------------------------------

  ALTER TABLE "SCOTT"."AUDIOVISUAL_DATA" ADD CONSTRAINT "R_2" FOREIGN KEY ("REGISTRATIONNUMBER")
	  REFERENCES "SCOTT"."DATA" ("REGISTRATIONNUMBER") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table BOOK
--------------------------------------------------------

  ALTER TABLE "SCOTT"."BOOK" ADD CONSTRAINT "R_1" FOREIGN KEY ("REGISTRATIONNUMBER")
	  REFERENCES "SCOTT"."DATA" ("REGISTRATIONNUMBER") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DATA
--------------------------------------------------------

  ALTER TABLE "SCOTT"."DATA" ADD CONSTRAINT "R_14" FOREIGN KEY ("GET_DIVISION_CODE")
	  REFERENCES "SCOTT"."GET" ("GET_DIVISION_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table E_BOOK
--------------------------------------------------------

  ALTER TABLE "SCOTT"."E_BOOK" ADD CONSTRAINT "R_4" FOREIGN KEY ("REGISTRATIONNUMBER")
	  REFERENCES "SCOTT"."DATA" ("REGISTRATIONNUMBER") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ENTER_RECORD
--------------------------------------------------------

  ALTER TABLE "SCOTT"."ENTER_RECORD" ADD CONSTRAINT "R_15" FOREIGN KEY ("OUTSIDERPERSON_CODE")
	  REFERENCES "SCOTT"."OUTSIDERPERSON" ("OUTSIDERPERSON_CODE") ENABLE;
 
  ALTER TABLE "SCOTT"."ENTER_RECORD" ADD CONSTRAINT "R_34" FOREIGN KEY ("MEMBERNUMBER")
	  REFERENCES "SCOTT"."MEMBERINFORMATION" ("MEMBERNUMBER") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table FACILITYUSEBOOKING
--------------------------------------------------------

  ALTER TABLE "SCOTT"."FACILITYUSEBOOKING" ADD CONSTRAINT "R_35" FOREIGN KEY ("FACILITYNUMBER")
	  REFERENCES "SCOTT"."FACILITY" ("FACILITYNUMBER") ENABLE;
 
  ALTER TABLE "SCOTT"."FACILITYUSEBOOKING" ADD CONSTRAINT "R_56" FOREIGN KEY ("MEMBERNUMBER")
	  REFERENCES "SCOTT"."MEMBERINFORMATION" ("MEMBERNUMBER") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GET
--------------------------------------------------------

  ALTER TABLE "SCOTT"."GET" ADD CONSTRAINT "R_12" FOREIGN KEY ("BUSINESS_CODE")
	  REFERENCES "SCOTT"."BUSINESSADMINISTRATION" ("BUSINESS_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table LOSS
--------------------------------------------------------

  ALTER TABLE "SCOTT"."LOSS" ADD CONSTRAINT "R_2A" FOREIGN KEY ("RENTNUMBER")
	  REFERENCES "SCOTT"."RENT" ("RENTNUMBER") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table MEMBERINFORMATION
--------------------------------------------------------

  ALTER TABLE "SCOTT"."MEMBERINFORMATION" ADD CONSTRAINT "R_74" FOREIGN KEY ("MAJOR_DEPARTMENT_CODE")
	  REFERENCES "SCOTT"."MAJOR_DEPARTMENT" ("MAJOR_DEPARTMENT_CODE") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PC_USEBREAKDOWN
--------------------------------------------------------

  ALTER TABLE "SCOTT"."PC_USEBREAKDOWN" ADD CONSTRAINT "R_57" FOREIGN KEY ("MEMBERNUMBER")
	  REFERENCES "SCOTT"."MEMBERINFORMATION" ("MEMBERNUMBER") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PENALTYADMINISTRATION
--------------------------------------------------------

  ALTER TABLE "SCOTT"."PENALTYADMINISTRATION" ADD CONSTRAINT "R_4A" FOREIGN KEY ("CLASS_CODE")
	  REFERENCES "SCOTT"."PENALTY_CLASS" ("CLASS_CODE") ENABLE;
 
  ALTER TABLE "SCOTT"."PENALTYADMINISTRATION" ADD CONSTRAINT "R_8" FOREIGN KEY ("MEMBERNUMBER")
	  REFERENCES "SCOTT"."MEMBERINFORMATION" ("MEMBERNUMBER") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PUBLICATION_INFORMATION
--------------------------------------------------------

  ALTER TABLE "SCOTT"."PUBLICATION_INFORMATION" ADD CONSTRAINT "R_38" FOREIGN KEY ("ISSN")
	  REFERENCES "SCOTT"."PUBLICATION" ("ISSN") ENABLE;
 
  ALTER TABLE "SCOTT"."PUBLICATION_INFORMATION" ADD CONSTRAINT "R_41" FOREIGN KEY ("REGISTRATIONNUMBER")
	  REFERENCES "SCOTT"."DATA" ("REGISTRATIONNUMBER") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RENT
--------------------------------------------------------

  ALTER TABLE "SCOTT"."RENT" ADD CONSTRAINT "R_59" FOREIGN KEY ("MEMBERNUMBER")
	  REFERENCES "SCOTT"."MEMBERINFORMATION" ("MEMBERNUMBER") ENABLE;
 
  ALTER TABLE "SCOTT"."RENT" ADD CONSTRAINT "R_73" FOREIGN KEY ("REGISTRATIONNUMBER")
	  REFERENCES "SCOTT"."DATA" ("REGISTRATIONNUMBER") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RENTBOOKING
--------------------------------------------------------

  ALTER TABLE "SCOTT"."RENTBOOKING" ADD CONSTRAINT "R_58" FOREIGN KEY ("MEMBERNUMBER")
	  REFERENCES "SCOTT"."MEMBERINFORMATION" ("MEMBERNUMBER") ENABLE;
 
  ALTER TABLE "SCOTT"."RENTBOOKING" ADD CONSTRAINT "R_72" FOREIGN KEY ("REGISTRATIONNUMBER")
	  REFERENCES "SCOTT"."DATA" ("REGISTRATIONNUMBER") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table WISH_BOOK
--------------------------------------------------------

  ALTER TABLE "SCOTT"."WISH_BOOK" ADD CONSTRAINT "R_60" FOREIGN KEY ("MEMBERNUMBER")
	  REFERENCES "SCOTT"."MEMBERINFORMATION" ("MEMBERNUMBER") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table WISH_PUBLICATION_APPLY
--------------------------------------------------------

  ALTER TABLE "SCOTT"."WISH_PUBLICATION_APPLY" ADD CONSTRAINT "R_39" FOREIGN KEY ("MAJOR_DEPARTMENT_CODE")
	  REFERENCES "SCOTT"."MAJOR_DEPARTMENT" ("MAJOR_DEPARTMENT_CODE") ENABLE;
